# Statistische Analysen
# Bachelorarbeit von Florian A. Christ
# Betreuung durch Abdallah Alaoui und Natacha Van Groeningen
# Geographisches Institut der Universität Bern
# Herbstsemester 2022
# In Zusammenarbeit mit dem SPRINT-Forschungsprojekt
########

install.packages("rmarkdown")
library(rmarkdown)

#Einlesen der Bodendaten als CSV
soil_SOC <- read.csv("C:/Users/fcchr/OneDrive/Universitaet/Geographie/Bachelorarbeit/Work/Datenanalyse/CSS4_SoilData_BasicCharacterization_SOC_Allfields.csv",
                    header = T, sep = ";")

soil_pH <- read.csv("C:/Users/fcchr/OneDrive/Universitaet/Geographie/Bachelorarbeit/Work/Datenanalyse/pH_Soil_CSS4.csv",
                    header = T, sep = ";")

RQ_MEC_Difeno <- read.csv("C:/Users/fcchr/OneDrive/Universitaet/Geographie/Bachelorarbeit/Work/Datenanalyse/Difeno_EU_PNEC.csv",
                          header = T, sep = ";")

Soil_Texture <- read.csv("C:/Users/fcchr/OneDrive/Universitaet/Geographie/Bachelorarbeit/Work/Datenanalyse/CSS4_SoilData_BasicCharacterization_Texture_Allfields.csv",
                         header = T, sep = ";")

Soil_Texture_R <- read.csv("C:/Users/fcchr/OneDrive/Universitaet/Geographie/Bachelorarbeit/Work/Datenanalyse/CSS4_SoilData_BasicCharacterization_Texture_R_modified.csv",
                           header = T, sep = ";")

PPP_Difeno_SoilProp_Corr <- read.csv("C:/Users/fcchr/OneDrive/Universitaet/Geographie/Bachelorarbeit/Work/Datenanalyse/PPP_Summary_Difeno_Corr.csv",
                                     header = T, sep = ";")

PPP_Difeno_EU_SoilProp_Corr <- read.csv("C:/Users/fcchr/OneDrive/Universitaet/Geographie/Bachelorarbeit/Work/Datenanalyse/Difenoconazole_EU_1.csv",
                                     header = T, sep = ";")

PEC_MEC_CH <- read.csv("C:/Users/fcchr/OneDrive/Universitaet/Geographie/Bachelorarbeit/Work/Datenanalyse/PEC_MEC_CH.csv",
                      header = T, sep = ";")

PEC_MEC_EU <- read.csv("C:/Users/fcchr/OneDrive/Universitaet/Geographie/Bachelorarbeit/Work/Datenanalyse/PEC_MEC_EU.csv",
                       header = T, sep = ";")

PEC_MEC_PNEC <- read.csv("C:/Users/fcchr/OneDrive/Universitaet/Geographie/Bachelorarbeit/Work/Datenanalyse/PEC_MEC_PNEC.csv",
                         header = T, sep = ";")
class(soil_SOC[1:20,2])
class(soil_pH[,2])

#1.) pH Werte Analyse
#1.0 seperate conventional and organic measurements
soil_pH_All <- soil_pH[,2]  #all pH values
soil_pH_C <- soil_pH[1:10,2] #only conventional
soil_pH_O <- soil_pH[11:20,2] #only organic

#1.1 basic statistical values(Mean, Quartiles, Median, Min, Max)
summary(soil_pH_All) #all pH values
summary(soil_pH_C) #only conventional
summary(soil_pH_O) #only organic

shapiro.test(soil_pH_All)

#1.2 Standard Deviation
sd(soil_pH_All) #sd of all pH values
sd(soil_pH_C) #sd of only conventional
sd(soil_pH_O) #sd of only organic

#1.3 Plot of pH values per field
x <- c(1:20)
plot(x,soil_pH_All,
     xlim = c(1,20),
     xlab = "F01  F02  F03  F04  F05  F07  F08  F09  F10  F11  F21  F22  F23  F24  F25  F26  F27  F28  F29  F30",
     ylab = "pH-value", main = "Measured pH-Values",
     col = ifelse(x==1:10,"cadetblue","chartreuse"),
     pch = 16)
abline(h=mean(soil_pH_All),col="red") #Mean pH considering all Fields
abline(h=mean(soil_pH_C),col="blue") #Mean pH considering conventional Fields
abline(h=mean(soil_pH_O),col="green") #Mean pH considering organic Fields
abline(h=median(soil_pH_All,col="black")) #Median pH considering all fields
abline(v=10.5,col="black", lty = 3)

#1.3.1 Plot pH Values with GGPlot2
install.packages("ggplot2")
library(ggplot2)
mean(soil_pH_C)

pHplot <- ggplot(soil_pH,aes(x=as.factor(Field.Number),y=pH.Measured, colour = Agricultural.Practice)) +
  geom_point( size = 3)
print(pHplot +
      labs(y = "Measured pH", x = "Field Number") + #label x and y Axis
      ggtitle ("pH Values on sampled fields") + #Diagram Title
      labs (colour = "Agricultural Practice") + #Legend Title
      theme(legend.text = element_text(size = 11))+
      scale_colour_manual(values = c("turquoise2","purple1")) + #Colour of points
      geom_line() +
      geom_hline(aes(yintercept = mean(soil_pH_All),linetype = "All Fields"), col="green",size=1.0) +
      geom_hline(aes(yintercept = mean(soil_pH_C),linetype = "Conventional"), col="orange",size=1.0) +
      geom_hline(aes(yintercept = mean(soil_pH_O),linetype = "Organic"), col="blue",size=1.0) +
      scale_linetype_manual(name = "Mean pH Values", values = c(2,2,2),
                            guide = guide_legend(override.aes = list(color =c("green","orange","blue"))))
      ) 
  
#1.4 Boxplot of pH value Distribution on the fields

#Edit Data Frame in order to get a proper naming of the three Boxplots
pH_Data <- data.frame(All = soil_pH_All,
                      Conventional = soil_pH_C,
                      Organic = soil_pH_O)

#Boxplot of the data frame
boxplot(pH_Data, col = c("chartreuse", "turquoise2", "purple1"),
        main = "Comparison of Measured pH Value\
        between All-, Conventional- and Organic Fields",
        ylab = "pH Values")



#2. Analysis of SOC
#2.0 Organic & Conventional Values seperated
SOC_All <- soil_SOC[,2] #SOC values of all fields
SOC_Conventional <- soil_SOC[1:10,2] #SOC values of all conventional fields
SOC_Organic <- soil_SOC[11:20,2] #SOC values of all organic fields

SOC_Data <- data.frame(All = SOC_All,
                        Conventional = SOC_Conventional,
                        Organic = SOC_Organic)

#2.1 Summary of Statistical Key Figures SOC content
summary(SOC_Data)

sd(SOC_All)
sd(SOC_Conventional)
sd(SOC_Organic)

#2.2 Scatterplot of SOC content all-, conventional and organic fields
SOCplot <- ggplot(soil_SOC,aes(x=as.factor(Name),y=SOC, colour = Agricultural.Practice)) +
  geom_point( size = 3)
print(SOCplot +
        labs(y = "Measured SOC [%]", x = "Field Number") + #label x and y Axis
        ggtitle ("SOC content on sampled fields") + #Diagram Title
        labs (colour = "Agricultural Practice") + #Legend Title
        geom_line() +
        theme(legend.text = element_text(size = 11))+
        scale_colour_manual(values = c("turquoise2","purple1")) + #Colour of points
        geom_line() +
        geom_hline(aes(yintercept = mean(SOC_All),linetype = "All Fields"), col="green",size=1.0) +
        geom_hline(aes(yintercept = mean(SOC_Conventional),linetype = "Conventional"), col="orange",size=1.0) +
        geom_hline(aes(yintercept = mean(SOC_Organic),linetype = "Organic"), col="blue",size=1.0) +
        scale_linetype_manual(name = "Mean SOC Values", values = c(2,2,2),
                              guide = guide_legend(override.aes = list(color =c("green","orange","blue"))))
      )

#2.3 boxplots of SOC content on all-, conventional and organic fields
boxplot(SOC_Data, col = c("chartreuse", "turquoise2", "purple1"),
        main = "Comparison of Measured SOC Value\
        between All-, Conventional- and Organic Fields",
        ylab = "SOC Values")

#3. Analysis of Texture
install.packages(pkgs = "soiltexture")
library("soiltexture")


#3.1 Plot Texture of sampled fields in the WRB texture triangle
#agricultural practice is visually seperated
TT.plot(
  class.sys = "USDA.TT",
  tri.data = Soil_Texture_R,
  col = ifelse(Soil_Texture_R$Practice=="conventional","blue","seagreen1"),
  main = "Soil Classification on Analysed fields",
  css.lab= c("[%]Clay 0-2 µm","[%]Silt 2-63µm","[%]Sand 63-2000µm")
)

legend(x=80,y=90,
       legend = c("Conventional","Organic"),
       pch = 1,
       pt.lwd = 3,
       col = c("blue","seagreen1"),
       box.col = NA)

#3.2 Plot Texture with varying bubble size corresponding the SOC value
TT.plot(
  class.sys = "USDA.TT",
  tri.data = Soil_Texture_R,
  z.name = "SOC",
  col = ifelse(Soil_Texture_R$Practice=="conventional","seagreen1","blue"),
  main = "Soil Classification on Analysed fields,\
  Bubble size corresponding to SOC content",
  css.lab= c("[%]Clay 0-2 µm","[%]Silt 2-63µm","[%]Sand 63-2000µm")
)

legend(
  x = -5,
  y = 95,
  title =
    expression( bold('SOC [%]') ),
  legend = formatC(
    c(
      min( Soil_Texture_R[,"SOC"] ),
      quantile(Soil_Texture_R[,"SOC"] ,probs=c(25,50,75)/100),
      max( Soil_Texture_R[,"SOC"] )
    ),
    format = "f",
    digits = 1,
    width = 4,
    flag = "0"
  ), #
  pt.lwd = 4,
  col = "black",
  pt.cex = c(
    min( Soil_Texture_R[,"SOC"] ),
    quantile(Soil_Texture_R[,"SOC"] ,probs=c(25,50,75)/100),
    max( Soil_Texture_R["SOC"] )
  ), #,,
  pch = 1, 
  bty = "o",
  bg = NA,
  #box.col = NA, # Uncomment this to remove the legend box
  text.col = "black",
)
#legend Conventional & Organic
legend(x=80,y=90,
       legend = c("Conventional","Organic"),
       pch = 1,
       pt.lwd = 3,
       col = c("blue","seagreen1"))

#3.3 summary of soil classes found in samples
SoilClasses <- data.frame(TT.points.in.classes(
  tri.data = Soil_Texture_R,
  class.sys = "USDA.TT"
))


SoilClasses$FieldNumber <-c(1,2,3,4,5,7,8,9,10,11,21,22,23,24,25,26,27,28,29,30)

SoilClasses[nrow(SoilClasses)+1,] <- colSums(SoilClasses[,1:13])


#3.4.0 seperate clay content by Agricultural Practice
Clay_All <- Soil_Texture_R[,1]
Clay_Conventional <- Soil_Texture_R[1:10,1]
Clay_Organic <- Soil_Texture_R[11:20,1]

#Editting Dataframe used for Boxplot
Clay_Content <- data.frame(AllFields = Clay_All,
                              Conventional = Clay_Conventional,
                              Organic = Clay_Organic)
summary(Clay_Content)
#3.4.1 Boxplots comparing the clay content
#Editting Boxplot comparing clay content between All-, Conventional- and Organic Fields
boxplot(Clay_Content, col = c("chartreuse", "lightblue", "cadetblue"),
        main = "Comparison of Clay Content between\
        All-, Conventional- and Organic Fields",
        ylab = "Clay Content [%]")





#////////////PEC Calculations//////////////////////
install.packages("drat")
drat::addRepo("jranke")
install.packages("pfm")
library(pfm)

results_pfm <- PEC_soil(100/300 * 0.7 * 1 * 1000, interval = 365, DT50 = 250, t_avg = c(0, 21),
                        scenarios = "EFSA_2015")

#/////////////////////////////////////////////////////

#4. Correlations between Measured Values and Soil Properties, one by one
#4.1.1 Difenoconazole check if Data is normaly distributed
#Shapiro test
shapiro.test(PPP_Difeno_EU_SoilProp_Corr$Difenoconazole)
shapiro.test(PPP_Difeno_EU_SoilProp_Corr$SOC)
shapiro.test(PPP_Difeno_EU_SoilProp_Corr$pH)
shapiro.test(PPP_Difeno_EU_SoilProp_Corr$Clay)

hist(PPP_Difeno_EU_SoilProp_Corr$Difenoconazole)
hist(PPP_Difeno_EU_SoilProp_Corr$SOC)
hist(PPP_Difeno_EU_SoilProp_Corr$pH)
hist(PPP_Difeno_EU_SoilProp_Corr$Clay)

# Barplot MEC Difenoconazole
ggplot(RQ_MEC_Difeno,aes(x=Field,y=Difenoconazole,fill=ifelse(RQ>1,"SP RQ>1",country)))+
  geom_bar(stat="identity",width = 0.5)+
  labs(y="Difenoconazole [µg/kg]",fill="Country & RQ") +
  ggtitle("Difenoconazole MEC compared to PNEC")+
  scale_fill_manual(values=c("red","green","blue","pink"))+
  theme(legend.text = element_text(size = 11))+
  theme(axis.title.x = element_text(size =11))+
  geom_hline(aes(yintercept = 40,linetype="PNEC"),color="red",size=1.2)+
  scale_linetype_manual(name="",values = c("dashed"))+
  coord_cartesian(,ylim=c(0,60))

#QQ plot
qqnorm(PPP_Difeno_EU_SoilProp_Corr$Difenoconazole)
qqline(PPP_Difeno_EU_SoilProp_Corr$Difenoconazole, col = 2)

qqnorm(PPP_Difeno_EU_SoilProp_Corr$SOC)
qqline(PPP_Difeno_EU_SoilProp_Corr$SOC)

qqnorm(PPP_Difeno_EU_SoilProp_Corr$pH)
qqline(PPP_Difeno_EU_SoilProp_Corr$pH)

qqnorm(PPP_Difeno_EU_SoilProp_Corr$Clay)
qqline(PPP_Difeno_EU_SoilProp_Corr$Clay)

#4.1.2 Correlations between SOC and Difenoconazole Concentration measured
plot(PPP_Difeno_EU_SoilProp_Corr$Difenoconazole,PPP_Difeno_EU_SoilProp_Corr$SOC,xlab ="SOC [%]", ylab = "Concentration Difenoconazole [µg/kg]",main = "Difenoconazole Concentration\
     in Correlation to SOC [%]")
abline(lm(PPP_Difeno_EU_SoilProp_Corr$SOC~PPP_Difeno_EU_SoilProp_Corr$Difenoconazole, col = "red"))

cor.test(PPP_Difeno_EU_SoilProp_Corr$Difenoconazole,PPP_Difeno_EU_SoilProp_Corr$SOC,method = "spearman",conf.level = 0.95,exact = FALSE)#Spearman

#4.1.3 Correlations between pH and Difenoconazole Concentration measured
qplot(PPP_Difeno_EU_SoilProp_Corr$pH,PPP_Difeno_EU_SoilProp_Corr$Difenoconazole,xlab ="pH", ylab = "Difenoconazole [µg/kg]",main = "Difenoconazole Concentration\
     in Correlation to pH",colour = PPP_Difeno_EU_SoilProp_Corr$country) +
  geom_point(size=3) +
  labs (colour = "Country")+
  geom_smooth(method = "lm",formula = y~x,col="blue")
  

cor.test(PPP_Difeno_EU_SoilProp_Corr$pH,PPP_Difeno_EU_SoilProp_Corr$Difenoconazole,method = "spearman",conf.level = 0.95,exact = FALSE)#Spearman
reg1 <- lm(PPP_Difeno_EU_SoilProp_Corr$Difenoconazole~PPP_Difeno_EU_SoilProp_Corr$pH)
summary(reg1)

3.#4.1.4 Correlations between Clay and Difenoconazole Concentration measured
plot(PPP_Difeno_EU_SoilProp_Corr$Difenoconazole,PPP_Difeno_EU_SoilProp_Corr$Clay,xlab ="Clay [%]", ylab = "Concentration Difenoconazole [µg/kg]",main = "Difenoconazole Concentration\
     in Correlation to Clay [%]")
abline(lm(PPP_Difeno_SoilProp_Corr$Clay~PPP_Difeno_SoilProp_Corr$Difenoconazole), col = "blue")

cor.test(PPP_Difeno_SoilProp_Corr$Difenoconazole,PPP_Difeno_SoilProp_Corr$Clay,method = "spearman",conf.level = 0.95)#Spearman

#multiple Regression
MultiReg_Difeno_SP <- lm(PPP_Difeno_EU_SoilProp_Corr$Difenoconazole~
                           PPP_Difeno_EU_SoilProp_Corr$pH+
                           PPP_Difeno_EU_SoilProp_Corr$Clay)
summary(MultiReg_Difeno_SP)

#////////////////////////////////////////////////
#5. PEC to MEC compared
plot(PEC_MEC_CH$MEC.in..mg.kg.1.,PEC_MEC_CH$PEC.in..mg.kg.1., xlab = "MEC [mg/kg]", ylab = "PEC [mg/kg]", main = "PEC vs. MEC")
abline(lm(PEC_MEC_CH$PEC.in..mg.kg.1.~PEC_MEC_CH$MEC.in..mg.kg.1.), col = "blue")

cor.test(PEC_MEC_CH$PEC.in..mg.kg.1.,PEC_MEC_CH$MEC.in..mg.kg.1.,method = "pearson", conf.level = 0.95)
reg <- lm(PEC_MEC_CH$PEC.in..mg.kg.1.~PEC_MEC_CH$MEC.in..mg.kg.1.)
summary(reg)

PEC_MEC_Plot <- ggplot(PEC_MEC_CH,aes(y=PEC.in..mg.kg.1.,x=MEC.in..mg.kg.1.))+
  geom_point(size = 3)
print(PEC_MEC_Plot +
        labs(y = "PEC [mg/kg]", x = "MEC [mg/kg]")+
        ggtitle("PEC vs. MEC")+
        geom_smooth(method = "lm",formula = y~x))

plot(PEC_MEC_EU$MEC.in..mg.kg.1.,PEC_MEC_EU$PEC.in..mg.kg.1.,xlab = "MEC [mg/kg]", ylab = "PEC [mg/kg]", main = "PEC vs. MEC")
abline(lm(PEC_MEC_EU$MEC.in..mg.kg.1.~PEC_MEC_EU$PEC.in..mg.kg.1.), col = "blue")

PEC_MEC_Plot_EU <- ggplot(PEC_MEC_EU,aes(y=PEC.in..mg.kg.1.,x=MEC.in..mg.kg.1.))+
  geom_point(size = 3)
print(PEC_MEC_Plot_EU +
        labs(y = "PEC [mg/kg]", x = "MEC [mg/kg]")+
        ggtitle("PEC vs. MEC")+
        geom_smooth(method = "lm",formula = y~x))

#Plot PEC vs. MEC colour indicating country for EU
qplot(PEC_MEC_EU$MEC.in..mg.kg.1.,PEC_MEC_EU$PEC.in..mg.kg.1.,colour=PEC_MEC_EU$country,
      main = "PEC in Correlation to MEC",
      xlab = "MEC [mg/kg]",
      ylab = "PEC [mg/kg]",) +
  labs(colour="Country")+
  geom_point(size = 3)

#Difference PEC to MEC in %
Diff_PECMEC <- (PEC_MEC_EU$PEC.in..mg.kg.1.)/((PEC_MEC_EU$MEC.in..mg.kg.1.)/100)
Diff_PECMEC
summary(Diff_PECMEC)
hist(Diff_PECMEC)

#plot PEC vs. MEC Switzerland
qplot(PEC_MEC_CH$MEC.in..mg.kg.1.,PEC_MEC_CH$PEC.in..mg.kg.1.,colour = PEC_MEC_CH$country,
      main = "PEC in Correlation to MEC Switzerland",
      xlab = "MEC [mg/kg]",
      ylab = "PEC [mg/kg]",) +
  geom_point(size = 3,col="red")+
  labs(colour="Country")+
  geom_smooth(method = "lm",formula = y~x,col="blue")


#Barplot PEC vs.MEC with PNEC
ggplot(PEC_MEC_PNEC,aes(x=Field,y=PEC.in..mg.kg.1.,fill=PECMEC, colour=country))+
  geom_bar(width = 0.5,stat="identity",position = "dodge",size=1.2)+
  labs(y="Difenoconazole [mg/kg]",fill="Value",colour="Country") +
  ggtitle("PEC vs. MEC")+
  scale_fill_manual(values=c("azure","darkseagreen1"))+
  geom_hline(aes(yintercept = 0.04,linetype="PNEC"),color="red")+
  scale_linetype_manual(name="",values = c("dashed"))
  
#PEC summary
summary(PEC_MEC_EU$PEC.in..mg.kg.1.)


######## 6. STATISTICAL TESTS OF SOIL PROPERTIES  ##########
install.packages("psych")
library(psych)


###6.1 pH values from seperated to agricultural practices ###
shapiro.test(soil_pH_C)
shapiro.test(soil_pH_O)
hist(soil_pH_C)
hist(soil_pH_O)

wilcox.test(soil_pH$pH.Measured~soil_pH$Agricultural.Practice, exact = TRUE)

shapiro.test(SOC_Data$Conventional)
shapiro.test(SOC_Data$Organic)
hist(SOC_Data$Conventional)
hist(SOC_Data$Organic)

wilcox.test(soil_SOC$SOC~soil_SOC$Agricultural.Practice)
