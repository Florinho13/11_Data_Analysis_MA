geom_boxplot()+
ggtitle("Chlorophyll Content of Oilseed Rape leaves per field")+
labs(x="Field Numbers",y="SPAD values")+
theme_minimal()
chlorophyll_plot
chlorophyll_plot <- ggplot(chlorophyll_data_long_clean_rp,aes(x=substr(sample_name,1,3),y=chlorophyll_value,pattern = chlorophyll_type))+
geom_boxplot()+
ggtitle("Chlorophyll Content of Oilseed Rape leaves per field")+
labs(x="Field Numbers",y="SPAD values")+
theme_minimal()
chlorophyll_plot
chlorophyll_plot <- ggplot(chlorophyll_data_long_clean_rp,aes(x=substr(sample_name,1,3),y=chlorophyll_value,pattern = chlorophyll_type))+
geom_boxplot_pattern(
pattern_density = 0.1,
pattern_spacing = 0.03,
pattern_fill = "#2C3E50",  # pattern color
pattern_colour = "black",
alpha = 0.8
) +  ggtitle("Chlorophyll Content of Oilseed Rape leaves per field")+
labs(x="Field Numbers",y="SPAD values")+
theme_minimal()
library(ggpattern)
install.packages(ggpattern)
library(ggpattern)
library(ggpattern)
install.package("ggpattern")
install.packages("ggpattern")
library(ggpattern)
chlorophyll_plot <- ggplot(chlorophyll_data_long_clean_rp,aes(x=substr(sample_name,1,3),y=chlorophyll_value,pattern = chlorophyll_type))+
geom_boxplot_pattern(
pattern_density = 0.1,
pattern_spacing = 0.03,
pattern_fill = "#2C3E50",  # pattern color
pattern_colour = "black",
alpha = 0.8
) +  ggtitle("Chlorophyll Content of Oilseed Rape leaves per field")+
labs(x="Field Numbers",y="SPAD values")+
theme_minimal()
chlorophyll_plot
str(chlorophyll_data_long_clean_rp$chlorophyll_value)
chlorophyll_plot <- ggplot(chlorophyll_data_long_clean_rp,aes(x=substr(sample_name,1,3),y=chlorophyll_value))+
geom_boxplot_pattern(
pattern = chlorophyll_type
) +  ggtitle("Chlorophyll Content of Oilseed Rape leaves per field")+
labs(x="Field Numbers",y="SPAD values")+
theme_minimal()
chlorophyll_plot <- ggplot(chlorophyll_data_long_clean_rp,aes(x=substr(sample_name,1,3),y=chlorophyll_value))+
geom_boxplot_pattern(
pattern = chlorophyll_data_long_clean_rp$chlorophyll_type
) +  ggtitle("Chlorophyll Content of Oilseed Rape leaves per field")+
labs(x="Field Numbers",y="SPAD values")+
theme_minimal()
chlorophyll_plot
chlorophyll_plot <- ggplot(chlorophyll_data_long_clean_rp,aes(x=substr(sample_name,1,3),y=chlorophyll_value,fill = chlorophyll_type))+
geom_boxplot()
ggtitle("Chlorophyll Content of Oilseed Rape leaves per field")+
labs(x="Field Numbers",y="SPAD values")+
theme_minimal()
chlorophyll_plot <- ggplot(chlorophyll_data_long_clean_rp,aes(x=substr(sample_name,1,3),y=chlorophyll_value,fill = chlorophyll_type))+
geom_boxplot()+
ggtitle("Chlorophyll Content of Oilseed Rape leaves per field")+
labs(x="Field Numbers",y="SPAD values")+
theme_minimal()
chlorophyll_plot
chlorophyll_plot <- ggplot(chlorophyll_data_long_clean_rp,aes(x=substr(sample_name,1,3),y=chlorophyll_value,fill = chlorophyll_type))+
geom_boxplot()+
scale_fill_manual(alpha = 0.5)
chlorophyll_plot <- ggplot(chlorophyll_data_long_clean_rp,aes(x=substr(sample_name,1,3),y=chlorophyll_value,fill = chlorophyll_type))+
geom_boxplot(alpha =0.6)+
scale_fill_manual()
chlorophyll_plot <- ggplot(chlorophyll_data_long_clean_rp,aes(x=substr(sample_name,1,3),y=chlorophyll_value,fill = chlorophyll_type))+
geom_boxplot(alpha =0.6)+
scale_fill_manual()+
ggtitle("Chlorophyll Content of Oilseed Rape leaves per field")+
labs(x="Field Numbers",y="SPAD values")+
theme_minimal()
chlorophyll_plot
chlorophyll_plot <- ggplot(chlorophyll_data_long_clean_rp,aes(x=substr(sample_name,1,3),y=chlorophyll_value,fill = chlorophyll_type))+
geom_boxplot(alpha =0.6)+
ggtitle("Chlorophyll Content of Oilseed Rape leaves per field")+
labs(x="Field Numbers",y="SPAD values")+
theme_minimal()
chlorophyll_plot
chlorophyll_plot <- ggplot(chlorophyll_data_long_clean_rp,aes(x=substr(sample_name,1,3),y=chlorophyll_value,fill = chlorophyll_type))+
geom_boxplot(alpha =0.6)+
ggtitle("Chlorophyll Content of Oilseed Rape leaves per field")+
labs(x="Field Numbers",y="SPAD values")+
theme_minimal()+
theme(
plot.title = element_text(size = 15,face = "bold",hjust = 0.5),
axis.title.x = element_text(size=13),
axis.title.y = element_text(size=13),
axis.text.x = element_text(size = 11,angle = 45,hjust = 1),
axis.text.y = element_text(size =11),
strip.text = element_text(size = 13),
legend.text = element_text(size = 11),
legend.title = element_text(size = 13),
legend.position = "bottom"
)
chlorophyll_plot
viridis(2)
chlorophyll_plot <- ggplot(chlorophyll_data_long_clean_rp,aes(x=substr(sample_name,1,3),y=chlorophyll_value,fill = chlorophyll_type))+
geom_boxplot(alpha =0.6)+
ggtitle("Chlorophyll Content of Oilseed Rape leaves per field")+
labs(x="Field Numbers",y="SPAD values")+
scale_colour_manual(c("#440154FF","#FDE725FF"),c("Chlorophyll front","Chlorophyll mid"))+
theme_minimal()+
theme(
plot.title = element_text(size = 15,face = "bold",hjust = 0.5),
axis.title.x = element_text(size=13),
axis.title.y = element_text(size=13),
axis.text.x = element_text(size = 11,angle = 45,hjust = 1),
axis.text.y = element_text(size =11),
strip.text = element_text(size = 13),
legend.text = element_text(size = 11),
legend.title = element_text(size = 13),
legend.position = "bottom"
)
chlorophyll_plot
chlorophyll_plot <- ggplot(chlorophyll_data_long_clean_rp,aes(x=substr(sample_name,1,3),y=chlorophyll_value,fill = chlorophyll_type))+
geom_boxplot(alpha =0.6)+
ggtitle("Chlorophyll Content of Oilseed Rape leaves per field")+
labs(x="Field Numbers",y="SPAD values")+
scale_fill_manual(c("#440154FF","#FDE725FF"),c("Chlorophyll front","Chlorophyll mid"))+
theme_minimal()+
theme(
plot.title = element_text(size = 15,face = "bold",hjust = 0.5),
axis.title.x = element_text(size=13),
axis.title.y = element_text(size=13),
axis.text.x = element_text(size = 11,angle = 45,hjust = 1),
axis.text.y = element_text(size =11),
strip.text = element_text(size = 13),
legend.text = element_text(size = 11),
legend.title = element_text(size = 13),
legend.position = "bottom"
)
chlorophyll_plot
chlorophyll_plot <- ggplot(chlorophyll_data_long_clean_rp,aes(x=substr(sample_name,1,3),y=chlorophyll_value,fill = chlorophyll_type))+
geom_boxplot(alpha =0.6)+
ggtitle("Chlorophyll Content of Oilseed Rape leaves per field")+
labs(x="Field Numbers",y="SPAD values")+
scale_fill_manual(values = c("#440154FF","#FDE725FF"),c("Chlorophyll front","Chlorophyll mid"))+
theme_minimal()+
theme(
plot.title = element_text(size = 15,face = "bold",hjust = 0.5),
axis.title.x = element_text(size=13),
axis.title.y = element_text(size=13),
axis.text.x = element_text(size = 11,angle = 45,hjust = 1),
axis.text.y = element_text(size =11),
strip.text = element_text(size = 13),
legend.text = element_text(size = 11),
legend.title = element_text(size = 13),
legend.position = "bottom"
)
chlorophyll_plot
turbo(2)
chlorophyll_plot <- ggplot(chlorophyll_data_long_clean_rp,aes(x=substr(sample_name,1,3),y=chlorophyll_value,fill = chlorophyll_type))+
geom_boxplot(alpha =0.6)+
ggtitle("Chlorophyll Content of Oilseed Rape leaves per field")+
labs(x="Field Numbers",y="SPAD values")+
scale_fill_manual(values = c("#30123BFF" , "#7A0403FF"),c("Chlorophyll front","Chlorophyll mid"))+
theme_minimal()+
theme(
plot.title = element_text(size = 15,face = "bold",hjust = 0.5),
axis.title.x = element_text(size=13),
axis.title.y = element_text(size=13),
axis.text.x = element_text(size = 11,angle = 45,hjust = 1),
axis.text.y = element_text(size =11),
strip.text = element_text(size = 13),
legend.text = element_text(size = 11),
legend.title = element_text(size = 13),
legend.position = "bottom"
)
chlorophyll_plot
magma(2)
plasma(2)
chlorophyll_plot <- ggplot(chlorophyll_data_long_clean_rp,aes(x=substr(sample_name,1,3),y=chlorophyll_value,fill = chlorophyll_type))+
geom_boxplot(alpha =0.6)+
ggtitle("Chlorophyll Content of Oilseed Rape leaves per field")+
labs(x="Field Numbers",y="SPAD values")+
scale_fill_manual(values = c( "#0D0887FF" "#F0F921FF"),c("Chlorophyll front","Chlorophyll mid"))+
chlorophyll_plot <- ggplot(chlorophyll_data_long_clean_rp,aes(x=substr(sample_name,1,3),y=chlorophyll_value,fill = chlorophyll_type))+
geom_boxplot(alpha =0.6)+
ggtitle("Chlorophyll Content of Oilseed Rape leaves per field")+
labs(x="Field Numbers",y="SPAD values")+
scale_fill_manual(values = c( "#0D0887FF" ,"#F0F921FF"),c("Chlorophyll front","Chlorophyll mid"))+
theme_minimal()+
theme(
plot.title = element_text(size = 15,face = "bold",hjust = 0.5),
axis.title.x = element_text(size=13),
axis.title.y = element_text(size=13),
axis.text.x = element_text(size = 11,angle = 45,hjust = 1),
axis.text.y = element_text(size =11),
strip.text = element_text(size = 13),
legend.text = element_text(size = 11),
legend.title = element_text(size = 13),
legend.position = "bottom"
)
chlorophyll_plot
chlorophyll_plot <- ggplot(chlorophyll_data_long_clean_rp,aes(x=substr(sample_name,1,3),y=chlorophyll_value,fill = chlorophyll_type))+
geom_boxplot(alpha =0.5)+
ggtitle("Chlorophyll Content of Oilseed Rape leaves per field")+
labs(x="Field Numbers",y="SPAD values")+
scale_fill_manual(values = c( "#0D0887FF" ,"#F0F921FF"),c("Chlorophyll front","Chlorophyll mid"))+
theme_minimal()+
theme(
plot.title = element_text(size = 15,face = "bold",hjust = 0.5),
axis.title.x = element_text(size=13),
axis.title.y = element_text(size=13),
axis.text.x = element_text(size = 11,angle = 45,hjust = 1),
axis.text.y = element_text(size =11),
strip.text = element_text(size = 13),
legend.text = element_text(size = 11),
legend.title = element_text(size = 13),
legend.position = "bottom"
)
chlorophyll_plot
chlorophyll_plot <- ggplot(chlorophyll_data_long_clean_rp,aes(x=substr(sample_name,1,3),y=chlorophyll_value,fill = chlorophyll_type))+
geom_boxplot(alpha =0.2)+
ggtitle("Chlorophyll Content of Oilseed Rape leaves per field")+
labs(x="Field Numbers",y="SPAD values")+
scale_fill_manual(values = c( "#0D0887FF" ,"#F0F921FF"),c("Chlorophyll front","Chlorophyll mid"))+
theme_minimal()+
theme(
plot.title = element_text(size = 15,face = "bold",hjust = 0.5),
axis.title.x = element_text(size=13),
axis.title.y = element_text(size=13),
axis.text.x = element_text(size = 11,angle = 45,hjust = 1),
axis.text.y = element_text(size =11),
strip.text = element_text(size = 13),
legend.text = element_text(size = 11),
legend.title = element_text(size = 13),
legend.position = "bottom"
)
chlorophyll_plot
chlorophyll_plot <- ggplot(chlorophyll_data_long_clean_rp,aes(x=substr(sample_name,1,3),y=chlorophyll_value,fill = chlorophyll_type))+
geom_boxplot(alpha =0.4)+
ggtitle("Chlorophyll Content of Oilseed Rape leaves per field")+
labs(x="Field Numbers",y="SPAD values")+
scale_fill_manual(values = c( "#0D0887FF" ,"#F0F921FF"),c("Chlorophyll front","Chlorophyll mid"))+
theme_minimal()+
theme(
plot.title = element_text(size = 15,face = "bold",hjust = 0.5),
axis.title.x = element_text(size=13),
axis.title.y = element_text(size=13),
axis.text.x = element_text(size = 11,angle = 45,hjust = 1),
axis.text.y = element_text(size =11),
strip.text = element_text(size = 13),
legend.text = element_text(size = 11),
legend.title = element_text(size = 13),
legend.position = "bottom"
)
chlorophyll_plot
#combine chlorophyll_mid with chlorophyll_front to chlorophyll
chlorophyll_overall_clean_rp <- chlorophyll_data_clean_rp_median_plot %>%
mutate(chlorophyll_average = (chlorophyll_front+chlorophyll_mid)/2)
View(chlorophyll_overall_clean_rp)
#combine chlorophyll_mid with chlorophyll_front to chlorophyll
chlorophyll_overall_clean_rp <- chlorophyll_data_clean_rp_median_plot %>%
mutate(chlorophyll_average = (chlorophyll_front+chlorophyll_mid)/2) %>%
select(-c(chlorophyll_front,chlorophyll_mid))
chlorophyll_overall_clean_rp_long <- chlorophyll_overall_clean_rp %>%
pivot_longer(cols = 2,values_to = "measurement", names_to = "variable")
#combine data sets for plotting
plant_combined_data <- bind_rows(chlorophyll_overall_clean_rp_long,
plant_height_clean_rp_median_plot_long,
root_health_data_clean_rp_mean_plot_long,
sla_data_clean_rp_mean_plot_long)
#3. create plots####
mean_lines <- plant_combined_data_rp %>%
group_by(variable,farming_system) %>%
summarise(mean_value = mean(measurement,na.rm=TRUE),.groups = "drop")
ggsave("./02_output/09_plant_health/chlorophyll_boxplot.png",plot = ph_plot,
width = 19, height=9, units = "cm", dpi = 300)
ggsave("./02_output/09_plant_health/chlorophyll_boxplot.png",plot = chlorophyll_plot,
width = 19, height=9, units = "cm", dpi = 300)
plant_plot <- thesis_plot(plant_combined_data_rp,plant_combined_data_rp$sample_name,
plant_combined_data$measurement,mean_lines)
plant_plot
#combine data sets for plotting
plant_combined_data <- bind_rows(chlorophyll_overall_clean_rp_long,
plant_height_clean_rp_median_plot_long,
root_health_data_clean_rp_mean_plot_long,
sla_data_clean_rp_mean_plot_long)
plant_combined_data_rp <- plot_prepr(plant_combined_data)
write.xlsx(plant_combined_data_rp,"./02_output/09_plant_health/combined_plant_data_rp.xlsx")
saveRDS(plant_combined_data_rp,"./01_input/combined_pland_data_clean_rp.rds")
#3. create plots####
mean_lines <- plant_combined_data_rp %>%
group_by(variable,farming_system) %>%
summarise(mean_value = mean(measurement,na.rm=TRUE),.groups = "drop")
plant_plot <- thesis_plot(plant_combined_data_rp,plant_combined_data_rp$sample_name,
plant_combined_data$measurement,mean_lines)
plant_plot
plant_plot <- thesis_plot(plant_combined_data_rp,plant_combined_data_rp$sample_name,
plant_combined_data$measurement,mean_lines)+
facet_wrap(vars(variable),scales = "free_y")
plant_plot
plant_combined_data_rp <- plant_combined_data_rp %>%
filter(variable != "leaf_area_cm2" | variable != "leaf_weight_g")
plant_plot <- thesis_plot(plant_combined_data_rp,plant_combined_data_rp$sample_name,
plant_combined_data$measurement,mean_lines)+
facet_wrap(vars(variable),scales = "free_y")
plant_plot
plant_combined_data_rp <- plant_combined_data_rp %>%
filter(variable != "leaf_area_cm2" | variable != "leaf_weight_g")
View(plant_combined_data_rp)
plant_combined_data_rp <- plant_combined_data_rp %>%
filter(variable != "leaf_area_cm2")
plant_combined_data_rp <- plant_combined_data_rp %>%
filter(variable != "leaf_area_cm2") %>%
filter(variable != "leaf_weight_g")
plant_plot <- thesis_plot(plant_combined_data_rp,plant_combined_data_rp$sample_name,
plant_combined_data$measurement,mean_lines)+
facet_wrap(vars(variable),scales = "free_y")
plant_plot
plant_combined_data_rp <- plant_combined_data_rp %>%
filter(variable != "leaf_area_cm2") %>%
filter(variable != "leaf_weight_g")
plant_plot <- thesis_plot(plant_combined_data_rp,plant_combined_data_rp$sample_name,
plant_combined_data$measurement,mean_lines)+
facet_wrap(vars(variable),scales = "free_y")
plant_plot
plant_plot <- thesis_plot(plant_combined_data_rp,plant_combined_data_rp$sample_name,
plant_combined_data_rp$measurement,mean_lines)+
facet_wrap(vars(variable),scales = "free_y")
plant_plot
mean_lines <- plant_combined_data_rp %>%
group_by(variable,farming_system) %>%
summarise(mean_value = mean(measurement,na.rm=TRUE),.groups = "drop")
plant_plot <- thesis_plot(plant_combined_data_rp,plant_combined_data_rp$sample_name,
plant_combined_data_rp$measurement,mean_lines)+
facet_wrap(vars(variable),scales = "free_y")
plant_plot
unique(plant_combined_data_rp$variable)
clean_plant_names <- function(df,col_cont_par_name){
parameter_names_clean <- list("chlorophyll_average" = "Chlorophyll (SPAD)",
"height_cm" = "Plant height (cm)",
"root_health_score" = "Root health score",
"sla" = "Specific Leaf Area" )
df_clean_names <- df %>%
mutate({{ col_cont_par_name }} := recode({{ col_cont_par_name }}, !!!parameter_names_clean))
return(df_clean_names)
}
plant_combined_data_rp_cn <- clean_plant_names(plant_combined_data_rp,variable)
mean_lines <- plant_combined_data_rp %>%
group_by(variable,farming_system) %>%
summarise(mean_value = mean(measurement,na.rm=TRUE),.groups = "drop")
plant_plot <- thesis_plot(plant_combined_data_rp,plant_combined_data_rp$sample_name,
plant_combined_data_rp$measurement,mean_lines)+
facet_wrap(vars(variable),scales = "free_y")
plant_plot
mean_lines <- plant_combined_data_rp_cn %>%
group_by(variable,farming_system) %>%
summarise(mean_value = mean(measurement,na.rm=TRUE),.groups = "drop")
plant_combined_data_rp_cn <- clean_plant_names(plant_combined_data_rp,variable)
mean_lines <- plant_combined_data_rp_cn %>%
group_by(variable,farming_system) %>%
summarise(mean_value = mean(measurement,na.rm=TRUE),.groups = "drop")
plant_plot <- thesis_plot(plant_combined_data_rp_cn,plant_combined_data_rp_cn$sample_name,
plant_combined_data_rp_cn$measurement,mean_lines)+
facet_wrap(vars(variable),scales = "free_y")
plant_plot
parameter_names_clean <- list("chlorophyll_average" = "Chlorophyll (SPAD)",
"height_cm" = "Plant height (cm)",
"root_health_score" = "Root health score",
"sla" = "Specific Leaf Area (g/cm2)" )
clean_plant_names <- function(df,col_cont_par_name){
parameter_names_clean <- list("chlorophyll_average" = "Chlorophyll (SPAD)",
"height_cm" = "Plant height (cm)",
"root_health_score" = "Root health score",
"sla" = "Specific Leaf Area (g/cm2)" )
df_clean_names <- df %>%
mutate({{ col_cont_par_name }} := recode({{ col_cont_par_name }}, !!!parameter_names_clean))
return(df_clean_names)
}
plant_combined_data_rp_cn <- clean_plant_names(plant_combined_data_rp,variable)
mean_lines <- plant_combined_data_rp_cn %>%
group_by(variable,farming_system) %>%
summarise(mean_value = mean(measurement,na.rm=TRUE),.groups = "drop")
plant_plot <- thesis_plot(plant_combined_data_rp_cn,plant_combined_data_rp_cn$sample_name,
plant_combined_data_rp_cn$measurement,mean_lines)+
facet_wrap(vars(variable),scales = "free_y")
plant_plot
plant_plot <- thesis_plot(plant_combined_data_rp_cn,plant_combined_data_rp_cn$sample_name,
plant_combined_data_rp_cn$measurement,mean_lines)+
ggtitle("Plant Parameter Measurements per Field")
plant_plot <- thesis_plot(plant_combined_data_rp_cn,plant_combined_data_rp_cn$sample_name,
plant_combined_data_rp_cn$measurement,mean_lines)+
ggtitle("Plant Parameter Measurements per Field")+
facet_wrap(vars(variable),scales = "free_y")
plant_plot
median_lines <- plant_combined_data_rp_cn %>%
group_by(variable,farming_system) %>%
summarise(mean_value = median(measurement,na.rm=TRUE),.groups = "drop")
plant_plot <- thesis_plot(plant_combined_data_rp_cn,plant_combined_data_rp_cn$sample_name,
plant_combined_data_rp_cn$measurement,median_lines)+
ggtitle("Plant Parameter Measurements per Field")+
facet_wrap(vars(variable),scales = "free_y")
plant_plot
plant_plot <- thesis_plot(plant_combined_data_rp_cn,plant_combined_data_rp_cn$sample_name,
plant_combined_data_rp_cn$measurement,mean_lines)+
ggtitle("Plant Parameter Measurements per Field")+
facet_wrap(vars(variable),scales = "free_y")
plant_plot <- thesis_plot(plant_combined_data_rp_cn,plant_combined_data_rp_cn$sample_name,
plant_combined_data_rp_cn$measurement,mean_lines)+
ggtitle("Plant Parameter Measurements per Field Plot")+
facet_wrap(vars(variable),scales = "free_y")
plant_plot
ggsave("./02_output/09_plant_health/plant_results.png",plot = plant_plot,
width = 19, height=13, units = "cm", dpi = 300)
#Transformation of texture textfile to Excel
#Code created by Florian Christ as part of the Master Thesis 01.11.2024
#used R Version. 4.4.1 2024-06-14 ucrt
#1. import libraries -----------------------------
library(openxlsx)
library(readr)
library(tidyverse)
library(janitor)
#results PPP soil
PPP_results <- read.xlsx("./01_input/ppp_results_florian_final_2025_02_07.xlsx", sheet = NULL)
#results PPP soil
PPP_results <- read.xlsx("./01_input/ppp_results_florian_final_2025_02_07.xlsx",sheet = NULL)
#results PPP soil
PPP_results <- read.xlsx("./01_input/ppp_results_florian_final_2025_02_07.xlsx",sheet = 1:4)
#results PPP soil
PPP_results <- read.xlsx("./01_input/ppp_results_florian_final_2025_02_07.xlsx")
#results PPP soil
PPP_results <- read.xlsx("./01_input/ppp_results_florian_final_2025_02_07.xlsx",sheet = c(1,2,3,4))
#results PPP soil
PPP_results <- read.xlsx("./01_input/ppp_results_florian_final_2025_02_07.xlsx",sheet = "positive")
PPP_results <- read.xlsx("./01_input/ppp_results_florian_final_2025_02_07.xlsx",sheet = "negative")
PPP_results_negative <- read.xlsx("./01_input/ppp_results_florian_final_2025_02_07.xlsx",sheet = "negative")
#results PPP soil
PPP_results_positive <- read.xlsx("./01_input/ppp_results_florian_final_2025_02_07.xlsx",sheet = "positive")
PPP_results_gly_ampa <- read.xlsx("./01_input/ppp_results_florian_final_2025_02_07.xlsx",sheet = "Gly_AMPA")
PPP_results_gc <- read.xlsx("./01_input/ppp_results_florian_final_2025_02_07.xlsx",sheet = "GC")
rm(PPP_results)
View(PPP_results_positive)
PPP_soil_weighin <- read.xlsx("./01_input/ppp_soil_weighin_florian_2025_01_20.xlsx",sheet = "weigh_in_PPP_analysis")
View(PPP_soil_weighin)
View(PPP_soil_weighin)
#12. clean PPP soil data####
#positive
PPP_results_positive_cl <- PPP_results_positive %>%
rename("sample" = "Sample")
View(PPP_results_positive_cl)
#recalculate the values from ng/ml (solvent) to ng/g (soil)
#add column with weight of the analysed soil samples.
PPP_results_positive_weight <- PPP_results_positive_cl %>%
left_join(PPP_soil_weighin[c(1,6)],by=sample)
#recalculate the values from ng/ml (solvent) to ng/g (soil)
#add column with weight of the analysed soil samples.
PPP_results_positive_weight <- PPP_results_positive_cl %>%
left_join(PPP_soil_weighin[c(1,6)],by="sample")
View(PPP_results_positive_weight)
#12. clean PPP soil data####
#positive
PPP_results_positive_cl <- PPP_results_positive %>%
mutate(Sample = str_replace(Sample,"_P","")) %>%
rename("sample" = "Sample") %>%
#recalculate the values from ng/ml (solvent) to ng/g (soil)
#add column with weight of the analysed soil samples.
PPP_results_positive_weight <- PPP_results_positive_cl %>%
left_join(PPP_soil_weighin[c(1,6)],by="sample")
#12. clean PPP soil data####
#positive
PPP_results_positive_cl <- PPP_results_positive %>%
mutate(Sample = str_replace(Sample,"_P","")) %>%
rename("sample" = "Sample")
View(PPP_results_positive_cl)
#recalculate the values from ng/ml (solvent) to ng/g (soil)
#add column with weight of the analysed soil samples.
PPP_results_positive_weight <- PPP_results_positive_cl %>%
left_join(PPP_soil_weighin[c(1,6)],by="sample")
View(PPP_results_positive_weight)
PPP_results_positive_clean <- PPP_results_positive_weight[c(1,3:36),1:150]
View(PPP_results_positive_clean)
PPP_results_positive_clean <- PPP_results_positive_weight[2:36,1:150]
View(PPP_results_positive_clean)
str(PPP_results_positive_weight)
View(PPP_results_positive_clean)
View(PPP_results_positive_cl)
PPP_results_positive_clean <- PPP_results_positive_weight[2:36,1:150] %>%
mutate(across(everything(),~ifelse(.=="<LOQ",0,.)))
View(PPP_results_positive_clean)
View(PPP_results_positive_clean)
PPP_results_positive_clean <- PPP_results_positive_weight[2:36,1:150] %>%
mutate(across(everything(),~ifelse(.=="<LOQ",0,.))) %>%
mutate_at(vars(2:150),as.numeric())
PPP_results_positive_clean <- PPP_results_positive_weight[2:36,1:150] %>%
mutate(across(everything(),~ifelse(.=="<LOQ",0,.))) %>%
mutate_at(vars(2:150),as.numeric)
View(PPP_results_positive_clean)
str(PPP_results_positive_clean)
PPP_results_positive_clean <- PPP_results_positive_weight[2:36,1:150] %>%
mutate(across(everything(),~ifelse(.=="<LOQ",0,.))) %>%
mutate_at(vars(2:150),as.numeric) %>%
mutate(across(2:149,~if_else(is.na(`weigh_que_corr.[g]`),.x,.x*15/`weigh_que_corr.[g]`)))
View(PPP_results_positive_clean)
View(PPP_results_positive_weight)
PPP_results_positive_clean_ng_g <- PPP_results_positive_weight[2:36,1:150] %>%
mutate(across(everything(),~ifelse(.=="<LOQ",0,.))) %>%
mutate_at(vars(2:150),as.numeric) %>%
mutate(across(2:149,~if_else(is.na(`weigh_que_corr.[g]`),.x,.x*15/`weigh_que_corr.[g]`)))
rm(PPP_results_positive_cl,PPP_results_positive_weight)
rm(PPP_results_positive_cl,PPP_results_positive_weight,PPP_results_positive_clean)
View(PPP_results_positive_clean_ng_g)
View(PPP_results_positive_clean_ng_g)
PPP_results_negative
PPP_results_negative
View(PPP_results_negative)
