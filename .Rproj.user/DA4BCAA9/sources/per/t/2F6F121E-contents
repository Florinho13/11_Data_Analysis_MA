#script for CNS analysis
#Code created by Florian Christ as part of the Master Thesis
#used R Version. 4.4.1 2024-06-14 ucrt


#00_Setup_Environment######
#import libraries
library(tidyverse)
library(openxlsx)
library(ggplot2)
library(ggdist)
library(GGally)
library(knitr)
library(flextable)
library(kableExtra)
library(officer)
library(FactoMineR)
library("factoextra")
library("corrplot")


#load project functions
source("./03_R/00_functions.R")


#import datasets
soil_combined <- readRDS("./01_input/soil_data_combined.rds")

#01 prepare plotting###
soil_combined_rp <- plot_prepr(soil_combined)


soil_combined_rp_short <- soil_combined_rp %>% 
  select(-c(12,15,17,19,21,23,29))

ggpairs(soil_combined_rp,columns = 5:32)

ggpairs(soil_combined_rp_short,columns = c(5,7:11,18:23,25),ggplot2::aes(colour=soil_combined_rp_short$farming_system, alpha = 0.5))

soil_comb_selected <- as.data.frame(soil_combined_rp_short[5:25])
ggcorrplot(soil_comb_selected, method = c("pairwise.complete.obs", "spearman"),
       label = TRUE,
       insig = "pch")

#02. basic statistical values####
summary(soil_combined$Hplus_conc_mol_l)

options(scipen=999)

summary_table <- soil_combined_rp_numeric_cl %>%
  summarise_all(list(
    Min = min, 
    Q1 = ~quantile(., 0.25), 
    Median = median, 
    Mean = mean, 
    Q3 = ~quantile(., 0.75), 
    Max = max,
    SD = sd
  )) %>% 
  pivot_longer(cols = everything(),names_to = "Parameter",values_to = "Value") %>% 
  # Separate at the LAST underscore using regex
  separate(Parameter,into = c("Parameter","Statistic"), sep= "_(?!.*_)") %>% 
  pivot_wider(names_from = "Statistic", values_from = "Value")



#recalculate pH in Hplus row
summary_table_clean <- summary_table %>%
  mutate_at(vars(2:8),as.numeric) %>% 
  mutate(across(where(is.numeric),~ifelse(Parameter == "Hplus_conc_mol_l",-log10(.),.))) %>%
  mutate_at(vars(2:8), round,digits=2)

#Create list to replace variable names with proper names
parameter_names <- summary_table_clean$Parameter
parameter_names_clean <- list( "pH" = "pH","Hplus_conc_mol_l" = "H+ concentration","clay" = "Clay content", "silt" = "Silt content", "sand" = "Sand content",
                              "microbial_c" = "Microbial C", "microbial_n" = "Microbial N", "Ca_aus_kation_mmol/kg" = "CEC Ca",
                              "K_aus_kation_mmol_kg" = "CEC K", "Mg_aus_kation_mmol_kg" = "CEC Mg",
                              "Mn_aus_kation_mmol_kg" = "CEC Mn", "Na_aus_kation_mmol_kg" = "CEC Na", "Corg" = "Corg",
                              "cec_NaMgCaKAl_mmol_kg" = "CEC NaMgCaKAl","N%_normal" = "N content", "C%_normal" = "C content",
                              "C/N_normal" = "C/N ratio", "mean_BD_g_cm3" = "Bulk density")

summary_table_clean <- summary_table_clean %>% 
  mutate(Parameter = recode(Parameter,!!!parameter_names_clean))


# Step 5: Create a styled flextable with embedded density plots
styled_table <- summary_table_clean %>%
  flextable()


styled_table

#03 Principal Component Analysis######
#3.1 Data preparation PCA
#remove unsuitable variables (non numeric)
soil_combined_rp_numeric <- soil_combined_rp[5:32] #Only numeric variables and shape and colour numbers removed.

#remove further unsuitable variables
#24,25 -> C and C/N muffled -> many 0 values
#10,11 -> Al some values below LOQ -> invalid
#8,13,15,17,19 -> remove mg/kg values
#27 -> remove Humus -> only a factor of Corg
soil_combined_rp_numeric_cl <- soil_combined_rp_numeric %>% select(-c(24,25,10,11,8,13,15,17,19,27))

#calculate field averages for the parameters considered in PCA
soil_combined_rp_numeric_cl_mean <- soil_combined_rp_numeric_cl %>% 
  mutate(field_id = str_sub(soil_combined_rp$sample_name,1,3)) %>% 
  group_by(field_id) %>% 
  summarise(across(where(is.numeric),~ mean(.x,na.rm = TRUE)))
  

ggpairs(soil_combined_rp_numeric_cl)
ggpairs(soil_combined_rp_numeric_cl_mean[2:19])

soil_combined_rp_numeric_cl$row_nr <- 1:dim(soil_combined_rp_numeric_cl)[1]

#correlation table
cor_df <- round(as.data.frame(cor(soil_combined_rp_numeric_cl)),2) %>% 
  as.data.frame()

bg_colors <- ifelse(abs(as.matrix(cor_df))>0.6,"lightyellow","transparent")
count(bg_colors,n())

ft_cor_df <- flextable(cor_df) %>% 
  bg(bg=bg_colors,part = "body") 
ft_cor_df

save_as_html(ft_cor_df,path = "./02_output/02_pca/cor_df.html")
print(doc, target = "./02_output/02_pca/cor_table.docx")
# datatable(cor_df) %>% 
#   formatStyle(
#     columns = names(cor_df),
#     backgroundColor = styleInterval(0.6,c("white","lightyellow"))
#   )


write.xlsx(cor_df,"./02_output/02_pca/cor_table.xlsx",asTable = TRUE,rowNames = TRUE)




rotissier <- pr_out_soil$x

#overview
apply(soil_combined_rp_numeric,2,mean)
apply(soil_combined_rp_numeric,2,var)

#3.2 conduct PCA
pr_out_soil <- prcomp(soil_combined_rp_numeric_cl, scale=T)

#PCA on the mean values
pr_out_soil_mean <- prcomp(soil_combined_rp_numeric_cl_mean[2:18],scale = T)

#results PCA
loadings_soil <- pr_out_soil$rotation
pr_out_soil$x
pr_out_soil$sdev

#results PCA mean
loadings_soil_mean <- pr_out_soil_mean$rotation


#proportion of varinace explained
pr_var_soil <- (pr_out_soil$sdev)^2
pve_soil <- pr_var_soil/sum(pr_var_soil)
sum(pve_soil[1:4])

#proportion of variance explained mean
pr_var_soil_mean <- (pr_out_soil_mean$sdev)^2
pve_soil_mean <- pr_var_soil_mean/sum(pr_var_soil_mean)
options(scipen = 999)
#3.3 Create PCA plots
#editing data for ggplot2
number_of_pc <- c(1:18)
number_of_pc_mean <- c(1:11)
#PVE for all plots
PVE <- data.frame(number_of_pc,pve_soil)
PVE$pc_considered <- ifelse(number_of_pc<4,"yes","no")
#PVE for just mean per field
PVE_mean <- data.frame(number_of_pc_mean,pve_soil_mean)
PVE_mean$pc_considered <- ifelse(number_of_pc_mean<4,"yes","no")

#scree plot
scree_plot <- ggplot(PVE,aes(x=number_of_pc,y=pve_soil,color = factor(pc_considered,levels = c("yes","no"))))+
  theme_minimal()+
  geom_point(shape=1,stat = "identity",size=3,stroke=1.5)+                      #define point size and shape
  geom_line(color = "black", group=1, show.legend = FALSE)+                     #define connecting line, don't show in legend
  scale_color_manual(values = c("green","red"))+
  guides(color=guide_legend(title = expression("PCs considered \nin Analyses")))+
  ggtitle("Scree Plot")+
  theme(legend.position = "right",                                               #define legend parameters
        plot.title=element_text(hjust=0.5,face = "bold"),axis.title.y = element_text(vjust=3))+ #define parameters of texts
  labs(x="Number of Principal Components",y="Proportion of Variance Explained")
scree_plot
#ggsave("./02_output/02_pca/screeplot.png",scree_plot,height = 15,width = 15,units = "cm")

#scree plot mean
scree_plot_mean <- ggplot(PVE_mean,aes(x=number_of_pc_mean,y=pve_soil_mean,color = factor(pc_considered,levels = c("yes","no"))))+
  theme_minimal()+
  geom_point(shape=1,stat = "identity",size=3,stroke=1.5)+                      #define point size and shape
  geom_line(color = "black", group=1, show.legend = FALSE)+                     #define connecting line, don't show in legend
  scale_color_manual(values = c("green","red"))+
  guides(color=guide_legend(title = expression("PCs considered \nin Analyses")))+
  ggtitle("Scree Plot")+
  theme(legend.position = "right",                                               #define legend parameters
        plot.title=element_text(hjust=0.5,face = "bold"),axis.title.y = element_text(vjust=3))+ #define parameters of texts
  labs(x="Number of Principal Components",y="Proportion of Variance Explained")
scree_plot_mean
#ggsave("./02_output/02_pca/screeplot_mean.png",scree_plot_mean,height = 15,width = 15,units = "cm")

#Biplot
biplot(pr_out_soil,scale = 0,col=c("darkblue","red"))

#Biplot factoextra
my_palette <- colorRampPalette(c("darkgreen", "white", "purple"))(100)

#Biplot normal
PCA_Biplot_soil <- fviz_pca_biplot(pr_out_soil, label = "var",col.ind = "black",col.var = "contrib",gradient.cols = my_palette,
                repel = TRUE,select.var = list(contrib=10) )+
  theme_minimal()+
  labs(x= "PC1 (62.7 %)", y= "PC2 (11.9 %)")+
  ggtitle("PCA Biplot")+
  theme(plot.title=element_text(hjust = 0.5))
PCA_Biplot_soil
#ggsave("./02_output/02_pca/PCA_Biplot_soil.png",PCA_Biplot_soil,height = 15,width = 15, units = "cm")

#Biplot mean
PCA_Biplot_soil_mean <- fviz_pca_biplot(pr_out_soil_mean, label = "var",col.ind = "black",col.var = "contrib",gradient.cols = my_palette,
                                   repel = TRUE,select.var = list(contrib=10) )+
  theme_minimal()+
  labs(x= "PC1 (71.5 %)", y= "PC2 (12.5 %)")+  ggtitle("PCA Biplot")+
  theme(plot.title=element_text(hjust = 0.5))

PCA_Biplot_soil_mean
#ggsave("./02_output/02_pca/PCA_Biplot_soil_mean.png",PCA_Biplot_soil,height = 15,width = 15, units = "cm")

#3.4 create PCA tables#####
#Loadings per PC rounded on 2 signif digits  and edit a data frame with the needed dimensions
pve_soil <- signif(pve_soil,2)
table_loadings <- data.frame(matrix(data = NA, nrow = 18, ncol = 18))
colnames(table_loadings) <- paste(1:18,". PC"," (",pve_soil,")",sep = "")

#fill in loading data to the dataframe
for (i in 1:dim(loadings_soil)[1]){
  sub <- loadings_soil[,i]
  
  sorted <- sub[order(abs(sub), decreasing = T)]
  
  n_sorted <- names(sorted)
  v_sorted <- unname(sorted)
  v_sorted <- signif(v_sorted,digits = 3)
  
  sorted <- paste(n_sorted, " (",v_sorted,")", sep = "")
  
  table_loadings[,i] <- sorted
  rm(sub,n_sorted,v_sorted,sorted)
}

write.xlsx(table_loadings[1:10,1:4],"./02_output/02_pca/soil_pca_table_loadings_short.xlsx")


table_loadings_styled <- table_loadings[1:10,1:4] %>% 
  flextable()              
table_loadings_styled
  

#PCA table mean
pve_soil_mean <- signif(pve_soil_mean,2)
table_loadings_mean <- data.frame(matrix(data = NA, nrow = 17, ncol = 11))
colnames(table_loadings_mean) <- paste(1:11,". PC"," (",pve_soil_mean,")",sep = "")

#fill in loading data to the dataframe
for (i in 1:dim(loadings_soil_mean)[2]){
  sub <- loadings_soil_mean[,i]
  
  sorted <- sub[order(abs(sub), decreasing = T)]
  
  n_sorted <- names(sorted)
  v_sorted <- unname(sorted)
  v_sorted <- signif(v_sorted,digits = 3)
  
  sorted <- paste(n_sorted, " (",v_sorted,")", sep = "")
  
  table_loadings_mean[,i] <- sorted
  rm(sub,n_sorted,v_sorted,sorted)
}


#4. Overview Figures soil variables ####
#prepare data set for overview plotting
soil_combined_rp_prep <- soil_combined_rp %>% 
  select(-c(28,29,14,15,12,17,19,21,23,31,33,34)) %>%  
  pivot_longer(cols = 5:22,names_to = "variable",values_to = "measurement")

#create vectors for variable categories
physical_soil_variables <- c("clay","silt","sand","mean_BD_g_cm3")
chemical_soil_variables <- c("pH","Hplus_conc_mol_l","Ca_aus_kation_mmol/kg",
                             "K_aus_kation_mmol_kg","Mg_aus_kation_mmol_kg",
                             "Mn_aus_kation_mmol_kg","Na_aus_kation_mmol_kg",
                             "cec_NaMgCaKAl_mmol_kg","N%_normal","C%_normal",
                             "C/N_normal","Corg")
biological_soil_variables <- c("microbial_c","microbial_N")

soil_combined_rp_overview <- soil_combined_rp_prep %>% 
  mutate(category = case_when(
    variable %in% physical_soil_variables~"physical",
    variable %in% chemical_soil_variables~"chemical",
    variable %in% biological_soil_variables~"biological"),.after = 4)

soil_physical <- soil_combined_rp_overview %>% 
  filter(category == "physical") %>% 
  filter(variable == "mean_BD_g_cm3")


ggplot(soil_physical,aes(x=variable,y=measurement))+
  stat_halfeye(alpha=0.5)+
  stat_interval(.width=c(0.5,0.75,0.95),alpha=0.3)+
  stat_dots()+
  stat_summary(geom = "point",fun = median)+
  coord_flip()
 # facet_wrap(~variable,scales = "free")
  # geom_weave()+

ggplot(soil_physical, aes(x = measurement)) +  # Map density to x-axis
  stat_halfeye(fill_type = "segments", alpha = 0.5) +  # Half-eye density
  stat_interval(.width = c(0.5, 0.75, 0.95), alpha = 0.3) +  # Confidence intervals
  #stat_summary(geom = "point", fun = median, color = "black", size = 3) +  # Median point
  facet_wrap(~ variable, scales = "free_x") +  # Facet by variable with free scales
  theme_minimal() +
  labs(x = "Measurement", y = "Density", title = "Density Distributions of Soil Variables")

ggplot(soil_physical,aes(variable,measurement))+
  stat_halfeye(fill_type = "segments", alpha=0.)+
  coord_flip()+
  facet_wrap(~variable)
  stat_interval()
  
ggplot(soil_physical, aes(x = measurement, fill = farming_system)) +
    stat_halfeye(
      aes(y = 0),        # place the half-eye around y=0
      orientation = "horizontal",
      adjust = 0.25,
      .width = c(0.5, 0.8, 0.95),
      alpha = 0.4
    )+
  stat_interval()+
  stat_dots()
    facet_wrap(~ variable, scales = "free") +
    theme_minimal() +
    labs(
      x = "Measurement",
      y = NULL,
      title = "Facet-Wrapped Half-Eyes by Variable"
    )
