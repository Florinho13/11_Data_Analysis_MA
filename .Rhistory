"Heimenhausen","Heimiswil","Ueberstorf"))+
theme_minimal()
ggplot(chlorophyll_data_long_clean_rp,aes(x=substr(sample_name,1,3),y=chlorophyll_value,fill = location))+
geom_boxplot()+
facet_wrap(~ chlorophyll_type, labeller = as_labeller(c("chlorophyll_mid" = "Chlorophyll Mid", "chlorophyll_front" = "Chlorophyll Front"))) +
scale_fill_manual(values = location_colors,labels = c("Freudwil","Niederhasli","Läufelfingen",
"Heimenhausen","Heimiswil","Ueberstorf"))+
theme_minimal()
ggplot(chlorophyll_data_long_clean_rp,aes(x=substr(sample_name,1,3),y=chlorophyll_value,fill = location))+
geom_boxplot()+
stat_summary(fun = mean, geom = "point", aes(shape = factor(farming_system_shapes)), size = 2, color = "black") +
scale_shape_manual(values = farming_system_shapes, labels = c("Regenerative", "Conventional")) +
scale_fill_manual(values = location_colors,labels = c("Freudwil","Niederhasli","Läufelfingen",
"Heimenhausen","Heimiswil","Ueberstorf"))+
theme_minimal()
ggplot(chlorophyll_data_long_clean_rp,aes(x=substr(sample_name,1,3),y=chlorophyll_value,fill = location))+
geom_boxplot()+
stat_summary(fun = mean, geom = "point", aes(shape = factor(chlorophyll_data_long_clean_rp$farming_system)), size = 2, color = "black") +
scale_shape_manual(values = chlorophyll_data_long_clean_rp$shape, labels = c("Regenerative", "Conventional")) +
scale_fill_manual(values = location_colors,labels = c("Freudwil","Niederhasli","Läufelfingen",
"Heimenhausen","Heimiswil","Ueberstorf"))+
theme_minimal()
ggplot(chlorophyll_data_long_clean_rp,aes(x=substr(sample_name,1,3),y=chlorophyll_value,fill = location))+
geom_boxplot()+
stat_summary(fun = mean, geom = "point", aes(shape = factor(chlorophyll_data_long_clean_rp$farming_system)), size = 2, color = "black") +
scale_shape_manual(values = chlorophyll_data_long_clean_rp$shape, labels = c("Regenerative", "Conventional"),title="Farming System") +
scale_fill_manual(values = location_colors,labels = c("Freudwil","Niederhasli","Läufelfingen",
"Heimenhausen","Heimiswil","Ueberstorf"))+
theme_minimal()
ggplot(chlorophyll_data_long_clean_rp,aes(x=substr(sample_name,1,3),y=chlorophyll_value,fill = location))+
geom_boxplot()+
stat_summary(fun = mean, geom = "point", aes(shape = factor(chlorophyll_data_long_clean_rp$farming_system)), size = 3, color = "black") +
scale_shape_manual(values = chlorophyll_data_long_clean_rp$shape, labels = c("Regenerative", "Conventional")) +
scale_fill_manual(values = location_colors,labels = c("Freudwil","Niederhasli","Läufelfingen",
"Heimenhausen","Heimiswil","Ueberstorf"))+
theme_minimal()
ggplot(chlorophyll_data_long_clean_rp,aes(x=substr(sample_name,1,3),y=chlorophyll_value,fill = location))+
geom_boxplot()+
stat_summary(fun = mean, geom = "point", aes(shape = factor(chlorophyll_data_long_clean_rp$farming_system)), size = 3, color = "red") +
scale_shape_manual(values = chlorophyll_data_long_clean_rp$shape, labels = c("Regenerative", "Conventional")) +
scale_fill_manual(values = location_colors,labels = c("Freudwil","Niederhasli","Läufelfingen",
"Heimenhausen","Heimiswil","Ueberstorf"))+
theme_minimal()
ggplot(chlorophyll_data_long_clean_rp,aes(x=substr(sample_name,1,3),y=chlorophyll_value,fill = location))+
geom_boxplot()+
stat_summary(fun = mean, geom = "point", aes(shape = factor(chlorophyll_data_long_clean_rp$farming_system)), size = 3, color = "grey") +
scale_shape_manual(values = chlorophyll_data_long_clean_rp$shape, labels = c("Regenerative", "Conventional")) +
scale_fill_manual(values = location_colors,labels = c("Freudwil","Niederhasli","Läufelfingen",
"Heimenhausen","Heimiswil","Ueberstorf"))+
theme_minimal()
ggplot(chlorophyll_data_long_clean_rp,aes(x=substr(sample_name,1,3),y=chlorophyll_value,fill = location))+
geom_boxplot()+
stat_summary(fun = mean, geom = "point", aes(shape = factor(chlorophyll_data_long_clean_rp$farming_system)), size = 3, color = "grey") +
scale_shape_manual(values = chlorophyll_data_long_clean_rp$shape, labels = c("Regenerative", "Conventional")) +
scale_fill_manual(values = location_colors,labels = c("Freudwil","Niederhasli","Läufelfingen",
"Heimenhausen","Heimiswil","Ueberstorf"))+
labs(color = "Location",shape="Farming System")+
theme_minimal()
ggplot(chlorophyll_data_long_clean_rp,aes(x=substr(sample_name,1,3),y=chlorophyll_value,fill = location))+
geom_boxplot()+
stat_summary(fun = mean, geom = "point", aes(shape = factor(chlorophyll_data_long_clean_rp$farming_system)), size = 3, color = "grey") +
scale_shape_manual(values = chlorophyll_data_long_clean_rp$shape, labels = c("Regenerative", "Conventional")) +
scale_fill_manual(values = location_colors,labels = c("Freudwil","Niederhasli","Läufelfingen",
"Heimenhausen","Heimiswil","Ueberstorf"))+
labs(Fill = "Location",shape="Farming System")+
theme_minimal()
ggplot(chlorophyll_data_long_clean_rp,aes(x=substr(sample_name,1,3),y=chlorophyll_value,fill = location,colour = chlorophyll_type))+
geom_boxplot()+
stat_summary(fun = mean, geom = "point", aes(shape = factor(chlorophyll_data_long_clean_rp$farming_system)), size = 3, color = "grey") +
scale_shape_manual(values = chlorophyll_data_long_clean_rp$shape, labels = c("Regenerative", "Conventional")) +
scale_fill_manual(values = location_colors,labels = c("Freudwil","Niederhasli","Läufelfingen",
"Heimenhausen","Heimiswil","Ueberstorf"))+
labs(Fill = "Location",shape="Farming System")+
theme_minimal()
ggplot(chlorophyll_data_long_clean_rp,aes(x=substr(sample_name,1,3),y=chlorophyll_value,fill = location,colour = chlorophyll_type))+
geom_boxplot()+
stat_summary(fun = mean, geom = "point", aes(shape = factor(chlorophyll_data_long_clean_rp$farming_system)), size = 3, color = "grey") +
scale_shape_manual(values = chlorophyll_data_long_clean_rp$shape, labels = c("Regenerative", "Conventional")) +
scale_fill_manual(values = location_colors,labels = c("Freudwil","Niederhasli","Läufelfingen",
"Heimenhausen","Heimiswil","Ueberstorf"))+
scale_colour_manual(values = c("green","lightblue"),labels = c("Chlorophyll Front", "Chlorophyll Mid"))
labs(fill = "Location",shape="Farming System", colour = "Measurement Point")+
theme_minimal()
ggplot(chlorophyll_data_long_clean_rp,aes(x=substr(sample_name,1,3),y=chlorophyll_value,fill = location,colour = chlorophyll_type))+
geom_boxplot()+
stat_summary(fun = mean, geom = "point", aes(shape = factor(chlorophyll_data_long_clean_rp$farming_system)), size = 3, color = "grey") +
scale_shape_manual(values = chlorophyll_data_long_clean_rp$shape, labels = c("Regenerative", "Conventional")) +
scale_fill_manual(values = location_colors,labels = c("Freudwil","Niederhasli","Läufelfingen",
"Heimenhausen","Heimiswil","Ueberstorf"))+
scale_colour_manual(values = c("green","lightblue"),labels = c("Chlorophyll Front", "Chlorophyll Mid"))
ggplot(chlorophyll_data_long_clean_rp,aes(x=substr(sample_name,1,3),y=chlorophyll_value,fill = location,colour = chlorophyll_type))+
geom_boxplot()+
stat_summary(fun = mean, geom = "point", aes(shape = factor(chlorophyll_data_long_clean_rp$farming_system)), size = 3, colour = "grey") +
scale_shape_manual(values = chlorophyll_data_long_clean_rp$shape, labels = c("Regenerative", "Conventional")) +
scale_fill_manual(values = location_colors,labels = c("Freudwil","Niederhasli","Läufelfingen",
"Heimenhausen","Heimiswil","Ueberstorf"))+
scale_colour_manual(values = c("green","lightblue"),labels = c("Chlorophyll Front", "Chlorophyll Mid"))
ggplot(chlorophyll_data_long_clean_rp,aes(x=substr(sample_name,1,3),y=chlorophyll_value,fill = location,colour = chlorophyll_type))+
geom_boxplot()+
stat_summary(fun = mean, geom = "point", aes(shape = factor(farming_system)), size = 3, colour = "grey") +
scale_shape_manual(values = chlorophyll_data_long_clean_rp$shape, labels = c("Regenerative", "Conventional")) +
scale_fill_manual(values = location_colors,labels = c("Freudwil","Niederhasli","Läufelfingen",
"Heimenhausen","Heimiswil","Ueberstorf"))+
scale_colour_manual(values = c("green","lightblue"),labels = c("Chlorophyll Front", "Chlorophyll Mid"))
ggplot(chlorophyll_data_long_clean_rp,aes(x=substr(sample_name,1,3),y=chlorophyll_value,fill = location,colour = chlorophyll_type))+
geom_boxplot()+
stat_summary(fun = mean, geom = "point", aes(shape = factor(farming_system)), size = 3, colour = "grey") +
scale_shape_manual(values = chlorophyll_data_long_clean_rp$shape, labels = c("Regenerative", "Conventional")) +
scale_fill_manual(values = location_colors,labels = c("Freudwil","Niederhasli","Läufelfingen",
"Heimenhausen","Heimiswil","Ueberstorf"))+
scale_colour_manual(values = c("green","lightblue"),labels = c("Chlorophyll Front", "Chlorophyll Mid"))+
labs(fill = "Location",shape="Farming System", colour = "Measurement Point")+
theme_minimal()
ggplot(chlorophyll_data_long_clean_rp,aes(x=substr(sample_name,1,3),y=chlorophyll_value,fill = location,colour = chlorophyll_type))+
geom_boxplot()+
stat_summary(fun = mean, geom = "point", aes(shape = factor(farming_system)), size = 3, colour = "grey") +
scale_shape_manual(values = chlorophyll_data_long_clean_rp$shape, labels = c("Regenerative", "Conventional")) +
scale_fill_manual(values = location_colors,labels = c("Freudwil","Niederhasli","Läufelfingen",
"Heimenhausen","Heimiswil","Ueberstorf"))+
scale_colour_manual(values = c("lightgreen","lightblue"),labels = c("Chlorophyll Front", "Chlorophyll Mid"))+
labs(fill = "Location",shape="Farming System", colour = "Measurement Point")+
theme_minimal()
ggplot(chlorophyll_data_long_clean_rp,aes(x=substr(sample_name,1,3),y=chlorophyll_value,fill = location,colour = chlorophyll_type))+
geom_boxplot()+
stat_summary(fun = mean, geom = "point", aes(shape = factor(farming_system)), size = 3, colour = "grey") +
scale_shape_manual(values = chlorophyll_data_long_clean_rp$shape, labels = c("Regenerative", "Conventional")) +
scale_fill_manual(values = location_colors,labels = c("Freudwil","Niederhasli","Läufelfingen",
"Heimenhausen","Heimiswil","Ueberstorf"))+
scale_colour_manual(values = c("black","white"),labels = c("Chlorophyll Front", "Chlorophyll Mid"))+
labs(fill = "Location",shape="Farming System", colour = "Measurement Point")+
theme_minimal()
ggplot(chlorophyll_data_long_clean_rp,aes(x=substr(sample_name,1,3),y=chlorophyll_value,fill = location,colour = chlorophyll_type))+
geom_boxplot()+
stat_summary(fun = mean, geom = "point", aes(shape = factor(farming_system)), size = 3, colour = "grey") +
scale_shape_manual(values = chlorophyll_data_long_clean_rp$shape, labels = c("Regenerative", "Conventional")) +
scale_fill_manual(values = location_colors,labels = c("Freudwil","Niederhasli","Läufelfingen",
"Heimenhausen","Heimiswil","Ueberstorf"))+
scale_colour_manual(values = c("lightgreen","lightblue"),labels = c("Chlorophyll Front", "Chlorophyll Mid"))+
labs(fill = "Location",shape="Farming System", colour = "Measurement Point")+
theme_minimal()
ggplot(chlorophyll_data_long_clean_rp,aes(x=substr(sample_name,1,3),y=chlorophyll_value,fill = location,colour = chlorophyll_type))+
geom_boxplot()+
labs(x="Field Numbers",y="SPAD values")
ggplot(chlorophyll_data_long_clean_rp,aes(x=substr(sample_name,1,3),y=chlorophyll_value,fill = location,colour = chlorophyll_type))+
geom_boxplot()+
labs(x="Field Numbers",y="SPAD values")+
stat_summary(fun = mean, geom = "point", aes(shape = factor(farming_system)), size = 3, colour = "grey") +
scale_shape_manual(values = chlorophyll_data_long_clean_rp$shape, labels = c("Regenerative", "Conventional")) +
scale_fill_manual(values = location_colors,labels = c("Freudwil","Niederhasli","Läufelfingen",
"Heimenhausen","Heimiswil","Ueberstorf"))+
scale_colour_manual(values = c("lightgreen","lightblue"),labels = c("Chlorophyll Front", "Chlorophyll Mid"))+
labs(fill = "Location",shape="Farming System", colour = "Measurement Point")+
theme_minimal()
ggplot(chlorophyll_data_long_clean_rp,aes(x=substr(sample_name,1,3),y=chlorophyll_value,fill = location,colour = chlorophyll_type))+
geom_boxplot()+
labs(x="Field Numbers",y="SPAD values")+
stat_summary(fun = mean, geom = "point", aes(shape = factor(farming_system)), size = 3, colour = "black") +
scale_shape_manual(values = chlorophyll_data_long_clean_rp$shape, labels = c("Regenerative", "Conventional")) +
scale_fill_manual(values = location_colors,labels = c("Freudwil","Niederhasli","Läufelfingen",
"Heimenhausen","Heimiswil","Ueberstorf"))+
scale_colour_manual(values = c("lightgreen","lightblue"),labels = c("Chlorophyll Front", "Chlorophyll Mid"))+
labs(fill = "Location",shape="Farming System", colour = "Measurement Point")+
theme_minimal()
ggplot(chlorophyll_data_long_clean_rp,aes(x=substr(sample_name,1,3),y=chlorophyll_value,fill = location,colour = chlorophyll_type))+
geom_boxplot()+
labs(x="Field Numbers",y="SPAD values")+
stat_summary(fun = mean, geom = "point", aes(shape = factor(farming_system)), size = 3.5, colour = "black") +
scale_shape_manual(values = chlorophyll_data_long_clean_rp$shape, labels = c("Regenerative", "Conventional")) +
scale_fill_manual(values = location_colors,labels = c("Freudwil","Niederhasli","Läufelfingen",
"Heimenhausen","Heimiswil","Ueberstorf"))+
scale_colour_manual(values = c("lightgreen","lightblue"),labels = c("Chlorophyll Front", "Chlorophyll Mid"))+
labs(fill = "Location",shape="Farming System", colour = "Measurement Point")+
theme_minimal()
View(chlorophyll_data_long_clean_rp)
chlorophyll_boxplot <- ggplot(chlorophyll_data_long_clean_rp,aes(x=substr(sample_name,1,3),y=chlorophyll_value,fill = location,colour = chlorophyll_type))+
geom_boxplot()+
labs(x="Field Numbers",y="SPAD values")+
stat_summary(fun = mean, geom = "point", aes(shape = factor(farming_system)), size = 3.5, colour = "black") +
scale_shape_manual(values = chlorophyll_data_long_clean_rp$shape, labels = c("Regenerative", "Conventional")) +
scale_fill_manual(values = location_colors,labels = c("Freudwil","Niederhasli","Läufelfingen",
"Heimenhausen","Heimiswil","Ueberstorf"))+
scale_colour_manual(values = c("lightgreen","lightblue"),labels = c("Chlorophyll Front", "Chlorophyll Mid"))+
facet_wrap(~plot)+
labs(fill = "Location",shape="Farming System", colour = "Measurement Point")+
theme_minimal()
chlorophyll_boxplot <- ggplot(chlorophyll_data_long_clean_rp,aes(x=substr(sample_name,1,3),y=chlorophyll_value,fill = location,colour = chlorophyll_type))+
geom_boxplot()+
labs(x="Field Numbers",y="SPAD values")+
stat_summary(fun = mean, geom = "point", aes(shape = factor(farming_system)), size = 3.5, colour = "black") +
scale_shape_manual(values = chlorophyll_data_long_clean_rp$shape, labels = c("Regenerative", "Conventional")) +
scale_fill_manual(values = location_colors,labels = c("Freudwil","Niederhasli","Läufelfingen",
"Heimenhausen","Heimiswil","Ueberstorf"))+
scale_colour_manual(values = c("lightgreen","lightblue"),labels = c("Chlorophyll Front", "Chlorophyll Mid"))+
facet_wrap(~chlorophyll_data_long_clean_rp$plot)+
labs(fill = "Location",shape="Farming System", colour = "Measurement Point")+
theme_minimal()
chlorophyll_boxplot
chlorophyll_boxplot <- ggplot(chlorophyll_data_long_clean_rp,aes(x=substr(sample_name,1,3),y=chlorophyll_value,fill = location,colour = chlorophyll_type))+
geom_boxplot()+
labs(x="Field Numbers",y="SPAD values")+
stat_summary(fun = mean, geom = "point", aes(shape = factor(farming_system)), size = 3.5, colour = "black") +
scale_shape_manual(values = chlorophyll_data_long_clean_rp$shape, labels = c("Regenerative", "Conventional")) +
scale_fill_manual(values = location_colors,labels = c("Freudwil","Niederhasli","Läufelfingen",
"Heimenhausen","Heimiswil","Ueberstorf"))+
scale_colour_manual(values = c("lightgreen","lightblue"),labels = c("Chlorophyll Front", "Chlorophyll Mid"))+
labs(fill = "Location",shape="Farming System", colour = "Measurement Point")+
theme_minimal()
chlorophyll_boxplot
ggsave("./02_output/chlorophyll_boxplot.png",chlorophyll_boxplot,width = 15,height = 15,units = "cm")
chlorophyll_boxplot <- ggplot(chlorophyll_data_long_clean_rp,aes(x=substr(sample_name,1,3),y=chlorophyll_value,fill = location,colour = chlorophyll_type))+
geom_boxplot()+
ggtitle("Chlorophyll Content of Oilseed Rape leaves")
chlorophyll_boxplot <- ggplot(chlorophyll_data_long_clean_rp,aes(x=substr(sample_name,1,3),y=chlorophyll_value,fill = location,colour = chlorophyll_type))+
geom_boxplot()+
ggtitle("Chlorophyll Content of Oilseed Rape leaves")+
labs(x="Field Numbers",y="SPAD values")+
stat_summary(fun = mean, geom = "point", aes(shape = factor(farming_system)), size = 3.5, colour = "black") +
scale_shape_manual(values = chlorophyll_data_long_clean_rp$shape, labels = c("Regenerative", "Conventional")) +
scale_fill_manual(values = location_colors,labels = c("Freudwil","Niederhasli","Läufelfingen",
"Heimenhausen","Heimiswil","Ueberstorf"))+
scale_colour_manual(values = c("lightgreen","lightblue"),labels = c("Chlorophyll Front", "Chlorophyll Mid"))+
labs(fill = "Location",shape="Farming System", colour = "Measurement Point")+
theme_minimal()
chlorophyll_boxplot
ggsave("./02_output/chlorophyll_boxplot.png",chlorophyll_boxplot,width = 15,height = 15,units = "cm")
#plant height
height_plot_overview <- overview_plot(plant_height_clean_rp,plant_height_clean_rp$sample_name,
plant_height_clean_rp$height_cm,plant_height_clean_rp$shape,
plant_height_clean_rp$location,"plant height",
"Field Values", "Height [cm]",location_colors)
height_plot_overview
#plant height
height_plot_overview <- overview_plot(plant_height_clean_rp,plant_height_clean_rp$sample_name,
plant_height_clean_rp$height_cm,plant_height_clean_rp$shape,
plant_height_clean_rp$location,"plant height",
"Field Values", "Height [cm]",location_colors)+
facet_wrap(~plot)
height_plot_overview
#plant height
height_plot_overview <- overview_plot(plant_height_clean_rp,plant_height_clean_rp$sample_name,
plant_height_clean_rp$height_cm,plant_height_clean_rp$shape,
plant_height_clean_rp$location,"plant height",
"Field Values", "Height [cm]",location_colors)+
#facet_wrap(~plot)
height_plot_overview
#plant height
height_plot_overview <- overview_plot(plant_height_clean_rp,plant_height_clean_rp$sample_name,
plant_height_clean_rp$height_cm,plant_height_clean_rp$shape,
plant_height_clean_rp$location,"plant height",
"Field Values", "Height [cm]",location_colors)
#facet_wrap(~plot)
height_plot_overview
ggsave("./02_output/plant_height_plot.png",height_plot_overview,width = 15,height = 15,units = "cm")
ggsave("./02_output/plant_height_plot.png",height_plot_overview,width = 15,height = 15,units = "cm")
chlorophyll_boxplot <- ggplot(chlorophyll_data_long_clean_rp,aes(x=substr(sample_name,1,3),y=chlorophyll_value,fill = location,colour = chlorophyll_type))+
geom_boxplot()+
ggtitle("Chlorophyll Content of Oilseed Rape leaves per field")+
labs(x="Field Numbers",y="SPAD values")+
stat_summary(fun = mean, geom = "point", aes(shape = factor(farming_system)), size = 3.5, colour = "black") +
scale_shape_manual(values = chlorophyll_data_long_clean_rp$shape, labels = c("Regenerative", "Conventional")) +
scale_fill_manual(values = location_colors,labels = c("Freudwil","Niederhasli","Läufelfingen",
"Heimenhausen","Heimiswil","Ueberstorf"))+
scale_colour_manual(values = c("lightgreen","lightblue"),labels = c("Chlorophyll Front", "Chlorophyll Mid"))+
labs(fill = "Location",shape="Farming System", colour = "Measurement Point")+
theme_minimal()
chlorophyll_boxplot
ggsave("./02_output/chlorophyll_boxplot.png",chlorophyll_boxplot,width = 15,height = 15,units = "cm")
R.version
install.packages("raster","sf","lubridate","exactextracr")
#00 Information
#Calculation of NDVI per Field on 3 different dates.
#Code created by Florian Christ as part of the Master Thesis 01.11.2024
#used R Version. 4.4.1 2024-06-14 ucrt
install.packages(sf)
#00 Information
#Calculation of NDVI per Field on 3 different dates.
#Code created by Florian Christ as part of the Master Thesis 01.11.2024
#used R Version. 4.4.1 2024-06-14 ucrt
install.packages("sf")
#00 Information
#Calculation of NDVI per Field on 3 different dates.
#Code created by Florian Christ as part of the Master Thesis 01.11.2024
#used R Version. 4.4.1 2024-06-14 ucrt
install.packages("raster")
#00 Information
#Calculation of NDVI per Field on 3 different dates.
#Code created by Florian Christ as part of the Master Thesis 01.11.2024
#used R Version. 4.4.1 2024-06-14 ucrt
install.packages("terra")
library(terra)
library(terra)
library(sf)
#2. import datasets -------------------------
# import all field polygons
gpkg_files <- list.files(path = "./01_input/01_NDVI/03_Field_Polygons", pattern = "*.gpkg", full.names = TRUE)
view(gpkg_files)
library(openxlsx)
library(readr)
library(tidyverse)
view(gpkg_files)
for(file in gpkg_files){
field <- st_read(file)
filename <- tools::file_path_sans_ext(basename(file))
assign(filename,field)
}
View(field)
View(Field_Code_6_2_1)
for(file in gpkg_files){
field <- st_read(file)
filename <- tools::file_path_sans_ext(basename(file))
assign(filename,field)
}
View(Field_Code_3_1_1)
View(Field_Code_3_1_1[[3]][[1]])
plot(Field_Code_2_1_1)
plot(Field_Code_2_2_1)
#5. NDVI calculation function #####
calculate_ndvi <- function(b4, b8) {
(b8 - b4) / (b8 + b4)
}
Field_Code_1_1_1
source("./03_R/00_functions.R")
#import all sentinel 2 data needed
parent_folder_jp2 <- "../07_QGIS/NDVI/02_Sentinel_Band_4_and_8/01_Months"
#list all jp2 files within parent folder
jp2_files <- list.files(parent_folder_jp2,pattern = "\\.jp2$",recursive = TRUE,
full.names = TRUE)
view(jp2_files)
rasters <- rast(file)
for(file in jp2_files){
rasters <- rast(file)
filename <- tools::file_path_sans_ext(basename(file))
assign(filename,rasters)
}
View(T32TLT_20240213T103141_B04_10m)
plot(T32TMT_20240203T103231_B04_10m)
View(T32TLT_20240528T102559_B04_10m)
View(T32TLT_20240528T102559_B04_10m)
source("C:/Users/fcchr/OneDrive/Universitaet/MASTER/MasterThesis/11_Data_Analysis_MA/03_R/05_NDVI.R", echo=TRUE)
band4_files <- ls(pattern = "B04")
band8_files <- ls(pattern = "B08")
S2_dataframe <- data.frame(band4_files,band8_files)
View(S2_dataframe)
dates_band4 <- sub(".*_(\\d{8})_.*", "\\1", names(band4_rasters))
dates_band4 <- sub(".*_(\\d{8})_.*", "\\1", names(band4_files))
dates_band4 <- sub(".*_(\\d{8})_.*", "\\1", band4_files)
rm(dates_band4)
#5. NDVI calculation function #####
calculate_ndvi <- function(b4_name, b8_name) {
b4 <- get(b4_name)    #using the get function name corresponding raster data is accessed.
b8 <- get(b8_name)
(b8 - b4) / (b8 + b4) #calculate NDVI
}
View(S2_dataframe)
for (i in nrow(S2_dataframe)){
band4_name <- S2_dataframe$band4_files[i]
band8_name <- S2_dataframe$band8_files[i]
ndvi_list[[i]] <- calculate_ndvi(band4_name,band8_name)
}
ndvi_list <- list()
for (i in nrow(S2_dataframe)){
band4_name <- S2_dataframe$band4_files[i]
band8_name <- S2_dataframe$band8_files[i]
ndvi_list[[i]] <- calculate_ndvi(band4_name,band8_name)
}
View(ndvi_list)
plot(ndvi_list[[1]])
plot(ndvi_list[1])
View(ndvi_list)
View(S2_dataframe)
library(stringr)
S2_dataframe <- S2_dataframe %>%
mutate(NDVI_name = substr(band4_files,8,22))
S2_dataframe <- S2_dataframe %>%
mutate(NDVI_name = merge("NDVI",substr(band4_files,8,22)))
S2_dataframe <- data.frame(band4_files,band8_files)
S2_dataframe <- S2_dataframe %>%
mutate(NDVI_name = merge("NDVI",substr(band4_files,8,22)))
S2_dataframe <- S2_dataframe %>%
mutate(NDVI_name = paste("ndvi_",substr(band4_files,8,22)))
ndvi_list <- list()
for (i in 1:nrow(S2_dataframe)){
band4_name <- S2_dataframe$band4_files[i]
band8_name <- S2_dataframe$band8_files[i]
ndvi_list[[i]] <- calculate_ndvi(band4_name,band8_name)
}
names(ndvi_list) <- S2_dataframe$NDVI_name
plot(ndvi_list[["ndvi_ 20240213T103141"]])
plot(Field_Code_6_1_1)
plot(ndvi_list[[name]], main = paste("NDVI for", name))
for (name in S2_dataframe$NDVI_name) {
plot(ndvi_list[[name]], main = paste("NDVI for", name))
}
#store the ndvi rasters as tif
ndvi_folder <- "../07_QGIS/NDVI/03_calculated_ndvi_rasters"
#Define output file path
output_file <- file.path(ndvi_folder,paste0(name,".tif"))
#store the ndvi rasters as tif
ndvi_folder <- "../07_QGIS/NDVI/03_calculated_ndvi_rasters"
for (name in names(ndvi_list)){
#retrieve raster from the list
ndvi_raster <- ndvi_list[[name]]
#Define output file path
output_file <- file.path(ndvi_folder,paste0(name,".tif"))
#save the raster as a GeoTiff
writeRaster(ndvi_raster,output_file, format = "GTiff",overwrite = TRUE)
}
#rename NDVI rasters
names(ndvi_list) <- S2_dataframe$NDVI_name
#store the ndvi rasters as tif
ndvi_folder <- "../07_QGIS/NDVI/03_calculated_ndvi_rasters"
for (name in names(ndvi_list)){
#retrieve raster from the list
ndvi_raster <- ndvi_list[[name]]
#Define output file path
output_file <- file.path(ndvi_folder,paste0(name,".tif"))
#save the raster as a GeoTiff
writeRaster(ndvi_raster,output_file, format = "GTiff",overwrite = TRUE)
}
#retrieve raster from the list
ndvi_raster <- ndvi_list[[name]]
View(ndvi_raster)
#Define output file path
output_file <- file.path(ndvi_folder,paste0(name,".tif"))
#Define output file path
output_file <- file.path(paste0(ndvi_folder,name,".tif"))
#Define output file path
output_file <- file.path(paste0(ndvi_folder,"/",name,".tif"))
S2_dataframe <- S2_dataframe %>%
mutate(NDVI_name = paste("ndvi_",substr(band4_files,8,22),sep = "")) #add a name for the NDVI rasters.
#rename NDVI rasters
names(ndvi_list) <- S2_dataframe$NDVI_name
#store the ndvi rasters as tif
ndvi_folder <- "../07_QGIS/NDVI/03_calculated_ndvi_rasters"
#retrieve raster from the list
ndvi_raster <- ndvi_list[[name]]
#Define output file path
output_file <- file.path(paste0(ndvi_folder,"/",name,".tif"))
for (name in names(ndvi_list)){
#retrieve raster from the list
ndvi_raster <- ndvi_list[[name]]
#Define output file path
output_file <- file.path(paste0(ndvi_folder,"/",name,".tif"))
#save the raster as a GeoTiff
writeRaster(ndvi_raster,output_file, format = "GTiff",overwrite = TRUE)
}
for (name in names(ndvi_list)){
#retrieve raster from the list
ndvi_raster <- ndvi_list[[name]]
#Define output file path
output_file <- file.path(paste0(ndvi_folder,"/",name,".tif"))
#save the raster as a GeoTiff
writeRaster(ndvi_raster,output_file, overwrite = TRUE)
}
View(ndvi_list)
S2_dataframe <- S2_dataframe %>%
mutate(NDVI_name = paste("ndvi_",substr(band4_files,1,22),sep = "")) #add a name for the NDVI rasters.
ndvi_list <- list() #create an empty list to store the NDVI rasters within.
#calculate NDVI for every date and tile used
for (i in 1:nrow(S2_dataframe)){
band4_name <- S2_dataframe$band4_files[i]
band8_name <- S2_dataframe$band8_files[i]
ndvi_list[[i]] <- calculate_ndvi(band4_name,band8_name)
}
#rename NDVI rasters
names(ndvi_list) <- S2_dataframe$NDVI_name
#store the ndvi rasters as tif
ndvi_folder <- "../07_QGIS/NDVI/03_calculated_ndvi_rasters"
#rename NDVI rasters
names(ndvi_list) <- S2_dataframe$NDVI_name
#store the ndvi rasters as tif
ndvi_folder <- "../07_QGIS/NDVI/03_calculated_ndvi_rasters"
for (name in names(ndvi_list)){
#retrieve raster from the list
ndvi_raster <- ndvi_list[[name]]
#Define output file path
output_file <- file.path(paste0(ndvi_folder,"/",name,".tif"))
#save the raster as a GeoTiff
writeRaster(ndvi_raster,output_file, overwrite = TRUE)
}
print(Field_Code_1_1_1)
print(T32TLT_20240213T103141_B04_10m)
plot(ndvi_list[["ndvi_T32TMT_20240203T103231"]],col = terrain.colors(50))
plot(ndvi_list[["ndvi_T32TMT_20240203T103231"]],col = rev(terrain.colors(50))
plot(ndvi_list[["ndvi_T32TMT_20240203T103231"]],col = rev(terrain.colors(50)))
plot(ndvi_list[["ndvi_T32TMT_20240203T103231"]],col = terrain.colors(50))
plot(st_geometry(Field_Code_1_1_1),add = TRUE, col = "red", lwd = 2)
plot(st_geometry(Field_Code_1_1_1),add = TRUE, col = "red", lwd = 100)
plot(st_geometry(Field_Code_1_1_1),add = TRUE, col = "pink", lwd = 100)
plot(st_geometry(Field_Code_1_1_1),add = TRUE, col = "blue", lwd = 100)
field_1_1_1_extent <- ext(Field_Code_1_1_1)
plot(ndvi_list[["ndvi_T32TMT_20240203T103231"]],col = terrain.colors(50),ext = field_1_1_1_extent)
View(field_1_1_1_extent)
plot(ndvi_list[["ndvi_T32TMT_20240203T103231"]],col = terrain.colors(50),ext = field_1_1_1_extent)
ndvi_cropped <- crop(ndvi_list[["ndvi_T32TMT_20240203T103231"]],field_1_1_1_extent)
field_1_1_1 <- st_transform(Field_Code_1_1_1,crs = ndvi_list[["ndvi_T32TMT_20240203T103231"]])
ndvi_crs <- crs(ndvi_list[["ndvi_T32TMT_20240203T103231"]])
print(ndvi_crs)
st_crs(Field_Code_1_1_1)
field_1_1_1 <- st_transform(Field_Code_1_1_1, crs = 32632)
st_crs(field_1_1_1)
field_1_1_1 <- st_transform(field_1_1_1,crs = ndvi_list[["ndvi_T32TMT_20240203T103231"]])
field_1_1_1 <- st_transform(Field_Code_1_1_1, crs = 32632)
field_1_1_1_extent <- ext(field_1_1_1)
plot(ndvi_list[["ndvi_T32TMT_20240203T103231"]],col = terrain.colors(50),ext = field_1_1_1_extent)
plot(st_geometry(field_1_1_1),add = TRUE, col = "blue", lwd = 100)
plot(st_geometry(field_1_1_1),add = TRUE, col = "blue", lwd = 2)
plot(st_geometry(field_1_1_1),add = TRUE, col = "blank", lwd = 2)
plot(st_geometry(field_1_1_1),add = TRUE, lwd = 2)
plot(st_geometry(field_1_1_1),add = TRUE, lwd = 2)
plot(ndvi_list[["ndvi_T32TMT_20240203T103231"]],col = terrain.colors(50),ext = field_1_1_1_extent)
plot(st_geometry(field_1_1_1),add = TRUE, lwd = 2)
