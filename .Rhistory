#map palette to variables
unique_variables <- sort(unique(variables_to_map))
location_colors <- setNames(viridis_colors, unique_variables)
return(location_colors)
}
#3. Plot texture triangles --------------------
#create colour to location link
location_colors <- map_colours(fields_texture_averaged_clean_r$location)
#assign colors to corresponding location
fields_texture_averaged_clean_r$color <- location_colors[as.character(fields_texture_averaged_clean_r$location)]
plots_texture_averaged_clean_r$color <- location_colors[as.character(plots_texture_averaged_clean_r$location)]
#texture plot for whole fields
TT.plot(
class.sys = "USDA.TT",
tri.data = fields_texture_averaged_clean_r,
col = fields_texture_averaged_clean_r$color,
pch = ifelse(fields_texture_averaged_clean_r$farming_system=="1",1,6),
lwd = 2.5,
cex = 2,
main = "Soil Classification on Analysed fields",
css.lab= c("[%]Clay 0-2 µm","[%]Silt 2-63µm","[%]Sand 63-2000µm")
)
#add legend
legend("topright",legend = unique(fields_texture_averaged_clean_r$location),
col = unique(plots_texture_averaged_clean_r$color),
pch = 16,
title = "Locations")
#1. function to map colours####
map_colours <- function(variables_to_map){
#create color palette
nr_of_colours <- length(unique(variables_to_map))
viridis_colors <- turbo(nr_of_colours)
#map palette to variables
unique_variables <- sort(unique(variables_to_map))
location_colors <- setNames(viridis_colors, unique_variables)
return(location_colors)
}
#3. Plot texture triangles --------------------
#create colour to location link
location_colors <- map_colours(fields_texture_averaged_clean_r$location)
#assign colors to corresponding location
fields_texture_averaged_clean_r$color <- location_colors[as.character(fields_texture_averaged_clean_r$location)]
plots_texture_averaged_clean_r$color <- location_colors[as.character(plots_texture_averaged_clean_r$location)]
#texture plot for whole fields
TT.plot(
class.sys = "USDA.TT",
tri.data = fields_texture_averaged_clean_r,
col = fields_texture_averaged_clean_r$color,
pch = ifelse(fields_texture_averaged_clean_r$farming_system=="1",1,6),
lwd = 2.5,
cex = 2,
main = "Soil Classification on Analysed fields",
css.lab= c("[%]Clay 0-2 µm","[%]Silt 2-63µm","[%]Sand 63-2000µm")
)
#add legend
legend("topright",legend = unique(fields_texture_averaged_clean_r$location),
col = unique(plots_texture_averaged_clean_r$color),
pch = 16,
title = "Locations")
#add legend
legend("topright",legend = unique(fields_texture_averaged_clean_r$location),
col = unique(plots_texture_averaged_clean_r$color),
pch = 16,
cex = 1.3,
title = "Locations")
#add legend for farming system
#legend Conventional & Organic
legend(x=80,y=90,
legend = c("Conventional","Regenerative"),
col = "black",
pt.lwd = 3,
pch = c(1,6))
#add legend for farming system
#legend Conventional & Organic
legend(x=80,y=90,
legend = c("Conventional","Regenerative"),
col = "black",
pt.lwd = 3,
cex = 2
pch = c(1,6))
#add legend for farming system
#legend Conventional & Organic
legend(x=80,y=90,
legend = c("Conventional","Regenerative"),
col = "black",
pt.lwd = 3,
cex = 2,
pch = c(1,6))
#add legend for farming system
#legend Conventional & Organic
legend(x=80,y=90,
legend = c("Conventional","Regenerative"),
col = "black",
pt.lwd = 3,
cex = 1.2,
pch = c(1,6))
#texture plot for whole fields
TT.plot(
class.sys = "USDA.TT",
tri.data = fields_texture_averaged_clean_r,
col = fields_texture_averaged_clean_r$color,
pch = ifelse(fields_texture_averaged_clean_r$farming_system=="1",1,6),
lwd = 2.5,
cex = 2,
main = "Soil Classification on Analysed fields",
css.lab= c("[%]Clay 0-2 µm","[%]Silt 2-63µm","[%]Sand 63-2000µm")
)
#add legend for locations
legend("topright",legend = unique(fields_texture_averaged_clean_r$location),
col = unique(plots_texture_averaged_clean_r$color),
pch = 16,
cex = 1.3,
title = "Locations")
legend
#add legend for farming system
legend(x=80,y=90,
legend = c("Conventional","Regenerative"),
col = "black",
pt.lwd = 3,
cex = 1.2,
pch = c(1,6))
#texture plot for whole fields
TT.plot(
class.sys = "USDA.TT",
tri.data = fields_texture_averaged_clean_r,
col = fields_texture_averaged_clean_r$color,
pch = ifelse(fields_texture_averaged_clean_r$farming_system=="1",1,6),
lwd = 2.5,
cex = 2,
main = "Soil Classification on Analysed fields",
css.lab= c("[%]Clay 0-2 µm","[%]Silt 2-63µm","[%]Sand 63-2000µm")
)
#add legend for locations
legend("topright",legend = unique(fields_texture_averaged_clean_r$location),
col = unique(plots_texture_averaged_clean_r$color),
pch = 16,
cex = 1.3,
title = "Locations")
#add legend for farming system
legend(x=80,y=80,
legend = c("Conventional","Regenerative"),
col = "black",
pt.lwd = 3,
cex = 1.2,
pch = c(1,6))
#add legend for farming system
legend(x=80,y=75,
legend = c("Conventional","Regenerative"),
col = "black",
pt.lwd = 3,
cex = 1.2,
pch = c(1,6))
#add legend for farming system
legend(x=80,y=76,
legend = c("Conventional","Regenerative"),
col = "black",
pt.lwd = 3,
cex = 1.2,
pch = c(1,6))
#add legend for farming system
legend(x=90,y=76,
legend = c("Conventional","Regenerative"),
col = "black",
pt.lwd = 3,
cex = 1.2,
pch = c(1,6))
#add legend for farming system
legend(x=85,y=76,
legend = c("Conventional","Regenerative"),
col = "black",
pt.lwd = 3,
cex = 1.2,
pch = c(1,6))
#add legend for farming system
legend(x=82,y=76,
legend = c("Conventional","Regenerative"),
col = "black",
pt.lwd = 3,
cex = 1.2,
pch = c(1,6))
#add legend for farming system
legend(x=81,y=76,
legend = c("Conventional","Regenerative"),
col = "black",
pt.lwd = 3,
cex = 1.2,
pch = c(1,6))
#add legend for farming system
legend(x=81.5,y=76,
legend = c("Conventional","Regenerative"),
col = "black",
pt.lwd = 3,
cex = 1.2,
pch = c(1,6))
#add legend for farming system
legend(x=81.8,y=76,
legend = c("Conventional","Regenerative"),
col = "black",
pt.lwd = 3,
cex = 1.2,
pch = c(1,6))
#add legend for farming system
legend(x=82,y=76,
legend = c("Conventional","Regenerative"),
col = "black",
pt.lwd = 3,
cex = 1.2,
pch = c(1,6))
#add legend for farming system
legend(x=83,y=76,
legend = c("Conventional","Regenerative"),
col = "black",
pt.lwd = 3,
cex = 1.2,
pch = c(1,6))
#add legend for farming system
legend(x=82.5,y=76,
legend = c("Conventional","Regenerative"),
col = "black",
pt.lwd = 3,
cex = 1.2,
pch = c(1,6))
#add legend for farming system
legend(x=82.4,y=76,
legend = c("Conventional","Regenerative"),
col = "black",
pt.lwd = 3,
cex = 1.2,
pch = c(1,6))
#add legend for farming system
legend(x=82.4,y=76,
legend = c("Conventional","Regenerative"),
col = "black",
pt.lwd = 3,
cex = 1.2,
pch = c(1,6)
title = "Farming System")
#add legend for farming system
legend(x=82.4,y=76,
legend = c("Conventional","Regenerative"),
col = "black",
pt.lwd = 3,
cex = 1.2,
pch = c(1,6),
title = "Farming System")
#texture plot for whole fields
TT.plot(
class.sys = "USDA.TT",
tri.data = fields_texture_averaged_clean_r,
col = fields_texture_averaged_clean_r$color,
pch = ifelse(fields_texture_averaged_clean_r$farming_system=="1",1,6),
lwd = 2.5,
cex = 2,
main = "Soil Classification on Analysed fields",
css.lab= c("[%]Clay 0-2 µm","[%]Silt 2-63µm","[%]Sand 63-2000µm")
)
#add legend for locations
legend("topright",legend = unique(fields_texture_averaged_clean_r$location),
col = unique(plots_texture_averaged_clean_r$color),
pch = 16,
cex = 1.3,
title = "Locations")
#add legend for farming system
legend(x=82.4,y=76,
legend = c("Conventional","Regenerative"),
col = "black",
pt.lwd = 3,
cex = 1.2,
pch = c(1,6),
title = "Farming System")
#add legend for farming system
legend(x=82.4,y=76,
legend = c("Regenerative","Conventional"),
col = "black",
pt.lwd = 3,
cex = 1.2,
pch = c(1,6),
title = "Farming System")
#3.2 texture plot for each plot on each field#########
TT.plot(
class.sys = "USDA.TT",
tri.data = plots_texture_averaged_clean_r,
col = plots_texture_averaged_clean_r$color,
pch = ifelse(plots_texture_averaged_clean_r$farming_system=="1",1,6),
lwd = 2.5,
cex = 2,
main = "Soil Classification on Analysed fields",
css.lab= c("[%]Clay 0-2 µm","[%]Silt 2-63µm","[%]Sand 63-2000µm")
)
#add legend for locations
legend("topright",legend = unique(fields_texture_averaged_clean_r$location),
col = unique(plots_texture_averaged_clean_r$color),
pch = 16,
cex = 1.3,
title = "Locations")
#add legend for farming system
legend(x=82.4,y=76,
legend = c("Regenerative","Conventional"),
col = "black",
pt.lwd = 3,
cex = 1.2,
pch = c(1,6),
title = "Farming System")
#3.2 texture plot for each plot on each field#########
png("./02_output/plots_texture.png",width=600,height = 600)
TT.plot(
class.sys = "USDA.TT",
tri.data = plots_texture_averaged_clean_r,
col = plots_texture_averaged_clean_r$color,
pch = ifelse(plots_texture_averaged_clean_r$farming_system=="1",1,6),
lwd = 2.5,
cex = 2,
main = "Soil Classification on each plot analysed on fields",
css.lab= c("[%]Clay 0-2 µm","[%]Silt 2-63µm","[%]Sand 63-2000µm")
)
#3.2 texture plot for each plot on each field#########
png("./02_output/plots_texture.png",width=600,height = 600)
TT.plot(
class.sys = "USDA.TT",
tri.data = plots_texture_averaged_clean_r,
col = plots_texture_averaged_clean_r$color,
pch = ifelse(plots_texture_averaged_clean_r$farming_system=="1",1,6),
lwd = 2.5,
cex = 2,
main = "Soil Classification on each plot analysed on fields",
css.lab= c("[%]Clay 0-2 µm","[%]Silt 2-63µm","[%]Sand 63-2000µm")
)
#add legend for locations
legend("topright",legend = unique(fields_texture_averaged_clean_r$location),
col = unique(plots_texture_averaged_clean_r$color),
pch = 16,
cex = 1.3,
title = "Locations")
#add legend for farming system
legend(x=82.4,y=76,
legend = c("Regenerative","Conventional"),
col = "black",
pt.lwd = 3,
cex = 1.2,
pch = c(1,6),
title = "Farming System")
dev.off()
saveRDS(texture_data_important_averaged,"./01_input/01_texture/texture_averaged_clean.rds")
#3.1 texture plot for whole fields ######
png("./02_output/fields_texture.png", width = 600, height = 600)
TT.plot(
class.sys = "USDA.TT",
tri.data = fields_texture_averaged_clean_r,
col = fields_texture_averaged_clean_r$color,
pch = ifelse(fields_texture_averaged_clean_r$farming_system=="1",1,6),
lwd = 2.5,
cex = 2,
main = "Soil Classification on Analysed fields",
css.lab= c("[%]Clay 0-2 µm","[%]Silt 2-63µm","[%]Sand 63-2000µm")
)
#add legend for locations
legend("topright",legend = unique(fields_texture_averaged_clean_r$location),
col = unique(plots_texture_averaged_clean_r$color),
pch = 16,
cex = 1.3,
title = "Locations")
#add legend for farming system
legend(x=82.4,y=76,
legend = c("Regenerative","Conventional"),
col = "black",
pt.lwd = 3,
cex = 1.2,
pch = c(1,6),
title = "Farming System")
dev.off()
#3.1 texture plot for whole fields ######
png("./02_output/01_texture/fields_texture.png", width = 600, height = 600)
TT.plot(
class.sys = "USDA.TT",
tri.data = fields_texture_averaged_clean_r,
col = fields_texture_averaged_clean_r$color,
pch = ifelse(fields_texture_averaged_clean_r$farming_system=="1",1,6),
lwd = 2.5,
cex = 2,
main = "Soil Classification on Analysed fields",
css.lab= c("[%]Clay 0-2 µm","[%]Silt 2-63µm","[%]Sand 63-2000µm")
)
#add legend for locations
legend("topright",legend = unique(fields_texture_averaged_clean_r$location),
col = unique(plots_texture_averaged_clean_r$color),
pch = 16,
cex = 1.3,
title = "Locations")
#add legend for farming system
legend(x=82.4,y=76,
legend = c("Regenerative","Conventional"),
col = "black",
pt.lwd = 3,
cex = 1.2,
pch = c(1,6),
title = "Farming System")
dev.off()
#3.2 texture plot for each plot on each field#########
png("./02_output/01_texture/plots_texture.png",width=600,height = 600)
TT.plot(
class.sys = "USDA.TT",
tri.data = plots_texture_averaged_clean_r,
col = plots_texture_averaged_clean_r$color,
pch = ifelse(plots_texture_averaged_clean_r$farming_system=="1",1,6),
lwd = 2.5,
cex = 2,
main = "Soil Classification on each plot analysed on fields",
css.lab= c("[%]Clay 0-2 µm","[%]Silt 2-63µm","[%]Sand 63-2000µm")
)
#add legend for locations
legend("topright",legend = unique(fields_texture_averaged_clean_r$location),
col = unique(plots_texture_averaged_clean_r$color),
pch = 16,
cex = 1.3,
title = "Locations")
#add legend for farming system
legend(x=82.4,y=76,
legend = c("Regenerative","Conventional"),
col = "black",
pt.lwd = 3,
cex = 1.2,
pch = c(1,6),
title = "Farming System")
dev.off()
#3.1 texture plot for whole fields ######
png("./02_output/01_texture/fields_texture.png", width = 700, height = 700)
TT.plot(
class.sys = "USDA.TT",
tri.data = fields_texture_averaged_clean_r,
col = fields_texture_averaged_clean_r$color,
pch = ifelse(fields_texture_averaged_clean_r$farming_system=="1",1,6),
lwd = 2.5,
cex = 2.2,
main = "Soil Classification on Analysed fields",
css.lab= c("[%]Clay 0-2 µm","[%]Silt 2-63µm","[%]Sand 63-2000µm")
)
#add legend for locations
legend("topright",legend = unique(fields_texture_averaged_clean_r$location),
col = unique(plots_texture_averaged_clean_r$color),
pch = 16,
cex = 1.3,
title = "Locations")
#add legend for farming system
legend(x=82.4,y=76,
legend = c("Regenerative","Conventional"),
col = "black",
pt.lwd = 3,
cex = 1.2,
pch = c(1,6),
title = "Farming System")
dev.off()
#3.2 texture plot for each plot on each field#########
png("./02_output/01_texture/plots_texture.png",width=700,height = 700)
TT.plot(
class.sys = "USDA.TT",
tri.data = plots_texture_averaged_clean_r,
col = plots_texture_averaged_clean_r$color,
pch = ifelse(plots_texture_averaged_clean_r$farming_system=="1",1,6),
lwd = 2.5,
cex = 2.2,
main = "Soil Classification on each plot analysed on fields",
css.lab= c("[%]Clay 0-2 µm","[%]Silt 2-63µm","[%]Sand 63-2000µm")
)
#add legend for locations
legend("topright",legend = unique(fields_texture_averaged_clean_r$location),
col = unique(plots_texture_averaged_clean_r$color),
pch = 16,
cex = 1.3,
title = "Locations")
#add legend for farming system
legend(x=82.4,y=76,
legend = c("Regenerative","Conventional"),
col = "black",
pt.lwd = 3,
cex = 1.2,
pch = c(1,6),
title = "Farming System")
dev.off()
View(plots_texture_averaged_clean_r)
#00_Setup_Environment######
#import libraries
library(tidyverse)
#pH
pH_data <- read.xlsx("./01_input/lab_resultate_bern.xlsx",sheet = 1)
#pH
pH_data <- read.xlsx("./01_input/lab_resultate_bern.xlsx",sheet = 1)
#1. import libraries -----------------------------
library(openxlsx)
#pH
pH_data <- read.xlsx("./01_input/lab_resultate_bern.xlsx",sheet = 1)
View(pH_data)
#4. clean pH Data#######
pH_data_clean <- pH_data %>%
select(-c(2,4:7)) %>%
rename(sample_name = Sample) %>%
mutate(sample_name = str_replace(sample_name,"Z","")) %>%
filter(sample_name != str_starts("Blank"))
#4. clean pH Data#######
pH_data_clean <- pH_data %>%
select(-c(2,4:7)) %>%
rename(sample_name = Sample) %>%
mutate(sample_name = str_replace(sample_name,"Z","")) %>%
filter(sample_name != str_starts(sample_name,"Blank"))
View(pH_data_clean)
#4. clean pH Data#######
pH_data_clean <- pH_data %>%
select(-c(2,4:7)) %>%
rename(sample_name = Sample) %>%
mutate(sample_name = str_replace(sample_name,"Z","")) %>%
filter(!str_starts(sample_name,"Blank"))
View(pH_data_clean)
saveRDS(pH_data_clean,"./01_input/pH_data_clean.rds")
