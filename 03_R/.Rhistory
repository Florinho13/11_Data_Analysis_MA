#1. import libraries and functions -----------------------------
library(openxlsx)
library(readr)
library(stringr)
library(tidyverse)
#raster data manipulation
library(terra)
library(sf)
source("./03_R/00_functions.R")
plot(Field_Code_2_2_1)
#import all sentinel 2 data needed
parent_folder_jp2 <- "../07_QGIS/NDVI/02_Sentinel_Band_4_and_8/01_Months"
#list all jp2 files within parent folder
jp2_files <- list.files(parent_folder_jp2,pattern = "\\.jp2$",recursive = TRUE,
full.names = TRUE)
for(file in jp2_files){
rasters <- rast(file)
filename <- tools::file_path_sans_ext(basename(file))
assign(filename,rasters)
}
#3. calculate all the required NDVI values###########
#get a list of the raster object names of each the band 4 and band 8 objects
band4_files <- ls(pattern = "B04")
band8_files <- ls(pattern = "B08")
#combine the two lists in a dataframe
S2_dataframe <- data.frame(band4_files,band8_files)
S2_dataframe <- S2_dataframe %>%
mutate(NDVI_name = paste("ndvi_",substr(band4_files,1,22),sep = "")) #add a name for the NDVI rasters.
ndvi_list <- list() #create an empty list to store the NDVI rasters within.
#calculate NDVI for every date and tile used
for (i in 1:nrow(S2_dataframe)){
band4_name <- S2_dataframe$band4_files[i]
band8_name <- S2_dataframe$band8_files[i]
ndvi_list[[i]] <- calculate_ndvi(band4_name,band8_name)
}
source("./03_R/00_functions.R")
