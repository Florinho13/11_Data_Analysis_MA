#script to gather Leaf Area data and create SLA data set.
#Code created by Florian Christ as part of the Master Thesis 13.04.2025
#used R Version. 4.4.1 2024-06-14 ucrt
#00_Setup_Environment######
#import libraries
library(tidyverse)
library(openxlsx)
library(ggplot2)
library(ggpattern)
library(flextable)
library(officer)

#load project functions
source("./03_R/00_functions.R")


#import data sets
#basic chlorophyll data
chlorophyll_data_clean <- readRDS("./01_input/plant_chlorophyll_data_clean.rds")

#long chlorophyll data
chlorophyll_data_long_clean <- readRDS("./01_input/plant_chlorophyll_data_clean_long.rds")

#plant height data
height_data_clean <- readRDS("./01_input/plant_height_data_clean.rds")

#root health data
root_health_data_clean <- readRDS("./01_input/rooth_health_clean_2025_04_13.rds")

#sla data
sla_data_clean <- readRDS("./01_input/sla_data_clean.rds")

#yield data
yield_data_clean <- read.xlsx("./01_input/yield_data_raps_2025_02_13.xlsx")


#01 prepare datasets for plotting#####
#basic chlorophyll data
chlorophyll_data_clean_rp <- plot_prepr(chlorophyll_data_clean)

#calculate plot medians due to skewed distribution of measurements per plot
chlorophyll_data_clean_rp_median_plot <- chlorophyll_data_clean_rp %>% 
  group_by(sample_name) %>% 
  summarise(chlorophyll_front = median(chlorophyll_front),chlorophyll_mid=median(chlorophyll_mid)) %>% 
  ungroup()

write.xlsx(chlorophyll_data_clean_rp_median_plot,"./02_output/09_plant_health/chlorophyll_median_per_plot.xlsx")

#combine chlorophyll_mid with chlorophyll_front to chlorophyll
chlorophyll_overall_clean_rp <- chlorophyll_data_clean_rp_median_plot %>% 
  mutate(chlorophyll_average = (chlorophyll_front+chlorophyll_mid)/2) %>%
  select(-c(chlorophyll_front,chlorophyll_mid))


#bring to long format
chlorophyll_data_clean_rp_median_plot_long <-chlorophyll_data_clean_rp_median_plot %>% 
  pivot_longer(cols = 2:3,values_to = "measurement",names_to = "variable")

chlorophyll_overall_clean_rp_long <- chlorophyll_overall_clean_rp %>%
  pivot_longer(cols = 2,values_to = "measurement", names_to = "variable")



#plant height
plant_height_clean_rp <- plot_prepr(height_data_clean)
#calculate plot medians due to skewed distribution of measurements per plot
plant_height_clean_rp_median_plot <- plant_height_clean_rp %>% 
  group_by(sample_name) %>%
  summarise(height_cm = median(height_cm)) %>% 
  ungroup()
write.xlsx(plant_height_clean_rp_median_plot,"./02_output/09_plant_health/plant_height_median_per_plot.xlsx")
#bring to long format
plant_height_clean_rp_median_plot_long <- plant_height_clean_rp_median_plot %>% 
  pivot_longer(cols = 2,values_to = "measurement",names_to = "variable")




#root health
root_health_data_clean_rp <- plot_prepr(root_health_data_clean)
#calculate plot means
root_health_data_clean_rp_mean_plot <- root_health_data_clean_rp %>% 
  group_by(sample_name) %>% 
  summarise(root_health_score = mean(root_health_score,na.rm = TRUE)) %>% 
  ungroup()
write.xlsx(root_health_data_clean_rp_mean_plot,"./02_output/09_plant_health/root_health_mean_per_plot.xlsx")
#bring to long format
root_health_data_clean_rp_mean_plot_long <- root_health_data_clean_rp_mean_plot %>% 
  pivot_longer(cols = 2,values_to = "measurement",names_to = "variable")
 
#sla
sla_data_clean_rp <- plot_prepr(sla_data_clean)
#calculate plot means
sla_data_clean_rp_mean_plot <- sla_data_clean_rp %>% 
  group_by(sample_name) %>% 
  summarise(sla = mean(sla,na.rm = TRUE), leaf_area_cm2 = mean(leaf_area), leaf_weight_g = mean(weight_g)) %>% 
  ungroup()
write.xlsx(sla_data_clean_rp_mean_plot,"./02_output/09_plant_health/sla_mean_per_plot.xlsx")

#bring to long format
sla_data_clean_rp_mean_plot_long <- sla_data_clean_rp_mean_plot %>% 
  pivot_longer(cols = 2:4,values_to = "measurement",names_to = "variable")

#2. combine data sets for plotting, generate overview table######
plant_combined_data <- bind_rows(chlorophyll_overall_clean_rp_long,
                                 plant_height_clean_rp_median_plot_long,
                                 root_health_data_clean_rp_mean_plot_long,
                                 sla_data_clean_rp_mean_plot_long)

plant_combined_data_rp <- plot_prepr(plant_combined_data)
write.xlsx(plant_combined_data_rp,"./02_output/09_plant_health/combined_plant_data_rp.xlsx")
saveRDS(plant_combined_data_rp,"./01_input/combined_pland_data_clean_rp.rds")

#bring table to wide format in order to create summary table
plant_combined_data_rp_clean <- clean_plant_names(plant_combined_data_rp,variable)
plant_combined_data_rp_wide <- plant_combined_data_rp_clean %>% 
  pivot_wider(names_from = variable,
              values_from = c(measurement))

#add yield data
plant_combined_data_rp_wide_prep <- plant_combined_data_rp_wide %>% 
  mutate(farm = substr(sample_name,1,3))

plant_combined_data_rp_wide_yield <- plant_combined_data_rp_wide_prep %>% 
  left_join(yield_data_clean,by="farm") %>% 
  relocate(farm,.before = location) %>% 
  relocate("yield_dt_ha", .after = `Specific Leaf Area (g/cm2)`) %>% 
  rename("Yield (dt/ha)" = "yield_dt_ha")

write.csv(plant_combined_data_rp_wide_yield,"./02_output/09_plant_health/combined_plant_data_incl_yiel.csv")
write.xlsx(plant_combined_data_rp_wide_yield,"./02_output/09_plant_health/combined_plant_data_incl_yield.xlsx")

saveRDS(plant_combined_data_rp_wide_yield,"./01_input/combined_plant_data_incl_yield.rds")
saveRDS(plant_combined_data_rp_wide_prep,"./01_input/combined_plant_data.rds")
#generate list of variables
plant_comb_variables <- unique(plant_combined_data_rp_clean$variable)
plant_comb_variables <- plant_comb_variables[1:4]
#variables including yield
plant_comb_variables_yield <- c(plant_comb_variables,"Yield (dt/ha)")



#get subset of the data from which a subset is desired
#exclusive yield
df <- plant_combined_data_rp_wide[plant_comb_variables]
#inclusive yield
#'df <- plant_combined_data_rp_wide_yield[plant_comb_variables_yield]
  
  summary_table <- df %>%
    summarise_all(list(
      Min = ~min(., na.rm = TRUE), 
      Q1 = ~quantile(., 0.25, na.rm = TRUE), 
      Median = ~median(., na.rm = TRUE), 
      Mean = ~mean(., na.rm = TRUE), 
      Q3 = ~quantile(., 0.75, na.rm = TRUE), 
      Max = ~max(., na.rm = TRUE),
      SD = ~sd(., na.rm = TRUE)
    )) %>% 
    pivot_longer(cols = everything(),names_to = "Parameter",values_to = "Value") %>% 
    # Separate at the LAST underscore using regex
    separate(Parameter,into = c("Parameter","Statistic"), sep= "_(?!.*_)") %>% 
    pivot_wider(names_from = "Statistic", values_from = "Value")
  
  assign("plant_summary",summary_table)
  rm(summary_table)

  # Step 5: Create a styled flextable with embedded density plots
  styled_table <- plant_summary %>%
    flextable()
  
  
  styled_table
  

  
#3. create plots####

plant_combined_data_rp <- plant_combined_data_rp %>% 
  filter(variable != "leaf_area_cm2") %>% 
  filter(variable != "leaf_weight_g")

plant_combined_data_rp_cn <- clean_plant_names(plant_combined_data_rp,variable)

mean_lines <- plant_combined_data_rp_cn %>% 
  group_by(variable,farming_system) %>% 
  summarise(mean_value = mean(measurement,na.rm=TRUE),.groups = "drop")

median_lines <- plant_combined_data_rp_cn %>% 
  group_by(variable,farming_system) %>% 
  summarise(mean_value = median(measurement,na.rm=TRUE),.groups = "drop")

plant_plot <- thesis_plot(plant_combined_data_rp_cn,plant_combined_data_rp_cn$sample_name,
                          plant_combined_data_rp_cn$measurement,mean_lines)+
  scale_x_discrete(labels = labels) +
  ggtitle("Plant Parameter Measurements per Field Plot")+
  facet_wrap(vars(variable),scales = "free_y")

plant_plot
ggsave("./02_output/09_plant_health/plant_results_v3.png",plot = plant_plot,
       width = 19, height=13, units = "cm", dpi = 300)
plant_plot

#3.1 Chlorophyll plot
chlorophyll_data_long_clean_rp <- plot_prepr(chlorophyll_data_long_clean)


chlorophyll_plot <- ggplot(chlorophyll_data_long_clean_rp,aes(x=substr(sample_name,1,3),y=chlorophyll_value,fill = chlorophyll_type))+
  geom_boxplot(alpha =0.4)+
  ggtitle("Chlorophyll Content of Oilseed Rape leaves per field")+
  labs(x="Field Numbers",y="SPAD values")+
  scale_fill_manual(values = c( "#0D0887FF" ,"#F0F921FF"),c("Chlorophyll front","Chlorophyll mid"))+
  theme_minimal()+
  theme(
    plot.title = element_text(size = 15,face = "bold",hjust = 0.5),
    axis.title.x = element_text(size=13),
    axis.title.y = element_text(size=13),
    axis.text.x = element_text(size = 11,angle = 45,hjust = 1),
    axis.text.y = element_text(size =11),
    strip.text = element_text(size = 13),
    legend.text = element_text(size = 11),
    legend.title = element_text(size = 13),
    legend.position = "bottom"
  )
chlorophyll_plot
ggsave("./02_output/09_plant_health/chlorophyll_boxplot.png",plot = chlorophyll_plot,
       width = 19, height=9, units = "cm", dpi = 300)

ggplot(df,aes(x=substr(column_sample_name,1,3),y=column_measurement_values))+
  geom_point(size=2,alpha = 0.7,color = "#2C3E50")+
  geom_hline(
    data = fs_mean_lines,
    aes(yintercept = mean_value, color = farming_system),
    linetype = "dashed",
    linewidth = 0.8
  ) +
  scale_color_manual(values = fs_colour,labels = c("Regenerative","Conventional"))+
  ggtitle("CNS measurements per field")+
  labs(x="Field ID",y="",color ="Farming System Mean:")+
  theme_minimal()+
  theme(
    plot.title = element_text(size = 15,face = "bold",hjust = 0.5),
    axis.title.x = element_text(size=13),
    axis.title.y = element_text(size=13),
    axis.text.x = element_text(size = 11,angle = 45,hjust = 1),
    axis.text.y = element_text(size =11),
    strip.text = element_text(size = 13),
    legend.text = element_text(size = 11),
    legend.title = element_text(size = 13),
    legend.position = "bottom"
  )

# 
# shapiro.test(sla_data_clean_rp$sla)
# qqnorm(sla_data_clean_rp$sla)
# hist(chlorophyll_data_clean_rp$chlorophyll_mid)
# 
# wilcox.test(sla~farming_system,sla_data_clean_rp)
# wilcox.test(chlorophyll_front~farming_system,chlorophyll_data_clean_rp)
# 
ggplot(sla_data_clean_rp,aes(x=substr(sample_name,1,3),y=sla))+
   geom_boxplot()

ggplot(sla_data_clean_rp,aes(x=substr(sample_name,1,5),y=sla))+
  geom_boxplot()

#4. overview table ####¨
plant_overview_means_plot <- plant_combined_data_rp_wide_yield %>% 
  group_by(sample_name) %>% 
  summarise(across(7:11,~mean(.x,na.rm = TRUE))) 

plant_overview_means <- plant_overview_means_plot %>%
  group_by(substr(sample_name,1,3)) %>% 
  summarise(across(2:6,~round(mean(.x,na.rm = TRUE),2))) %>% 
  rename("Farm ID" = "substr(sample_name, 1, 3)")

regen_col <- lighten(fs_colour[1],0.85)
conv_col <- lighten(fs_colour[2],0.85)

plant_flex <- plant_overview_means %>% 
  flextable() %>% 
  autofit() %>% 
  # ---- Header formatting ----
  bold(part = "header") %>%
  bg(part = "header", bg = "#DDDDDD") %>%

  #farm_id
  bold(
    i = ~ str_detect(`Farm ID`, "_1$"),   # condition: ends with "_1"
    j = "Farm ID",                        # only apply to Farm ID column
    bold = TRUE
  ) %>%
  
  border(
    j = "Farm ID", 
    border.right = fp_border(color = "black", width = 1), 
    part = "all"   # applies to header + body
  ) %>% 
  bg(j = "Farm ID", bg = "#F2F2F2", part = "all") %>%
  
  bg(
    i = ~ str_detect(`Farm ID`, "_1$"),   # condition
    bg = regen_col,
    #j = "Farm ID"# all columns will be colored
  ) %>% 
  bg(
    i = ~ str_detect(`Farm ID`, "_2$"),   # condition
    bg = conv_col,                     # all columns will be colored
  ) %>% 
  #export preparation
  set_table_properties(width = 1, layout = "autofit")
plant_flex


doc <- read_docx() %>% 
  body_add_par("Table X: Plant health parameters by field", style = "heading 1") %>% 
  body_add_flextable(
    plant_flex %>% 
      autofit() %>% 
      set_table_properties(width = 1, layout = "autofit")   # scales table to page width
  ) %>%
  body_add_par("", style = "Normal")



print(doc,target = "./02_output/14_thesis_tables/thesis_table_plant.docx")

