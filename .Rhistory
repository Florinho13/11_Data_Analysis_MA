# bottom-left annotation per facet
geom_richtext(data = loc_labels,
aes(x = 0.0, y = -Inf, label = label),
hjust = 0, vjust = -0.6, size = 3.5,
inherit.aes = FALSE,
fill = "transparent") +
theme_minimal() +
theme(
plot.title = element_text(size = 15,face = "bold",hjust = 0.5),
axis.title.x = element_text(size=13),
axis.title.y = element_text(size=13),
axis.text.x = element_text(size = 11),
axis.text.y = element_text(size =11),
strip.text.x = element_markdown(size = 13),
panel.border = element_rect(color = "grey60", fill = NA, linewidth = 0.5)
)+
labs(
title = "Cleveland Dot Plot of SHI Scores by Variable and Location",
x = "Score",
y = "Soil Health Parameter"
)
shi_plot_rq_present
ggsave("./02_output/08_shi/shi_cleeveland_plot_MA_no_CNratio_site_presentation.png",plot = shi_plot_rq_present,
width = 22, height=13, units = "cm", dpi = 300)
shi_plot_rq <- ggplot(shi_cleeveland_rq_plot) +
geom_segment(aes(x = Regenerative, xend = Conventional,
y = variable, yend = variable), color = "#2C3E50",alpha=0.7) +
geom_point(aes(x = Regenerative, y = variable), color = "#66c2a5", size = 3) +
geom_point(aes(x = Conventional, y = variable), color = "#fc8d62", size = 3) +
facet_wrap(~location, scales = "free_x",nrow = 3,
labeller = as_labeller(location_labels)) +
scale_x_continuous(limits = c(0,1))+
# bottom-left annotation per facet
geom_richtext(data = loc_labels,
aes(x = 0.0, y = -Inf, label = label),
hjust = 0, vjust = -0.6, size = 3.5,
inherit.aes = FALSE,
fill = "transparent") +
theme_minimal() +
theme(
plot.title = element_text(size = 15,face = "bold",hjust = 0.5),
axis.title.x = element_text(size=13),
axis.title.y = element_text(size=13),
axis.text.x = element_text(size = 11),
axis.text.y = element_text(size =11),
strip.text.x = element_markdown(size = 13),
panel.border = element_rect(color = "grey60", fill = NA, linewidth = 0.5)
)+
labs(
title = "Cleveland Dot Plot of SHI Scores by Variable and Location",
x = "Score",
y = "Soil Health Parameter"
)
shi_plot_rq
ggsave("./02_output/08_shi/shi_cleeveland_plot_MA_no_CNratio_site.png",plot = shi_plot_rq,
width = 19, height=27, units = "cm", dpi = 300)
#import datasets
soil_biological_param <- read.xlsx("./02_output/12_statistical_tests/soil_comb_bio.xlsx")
soil_chemical_param <- read.xlsx("./02_output/12_statistical_tests/soil_comb_chem.xlsx")
soil_physical_param <- read.xlsx("./02_output/12_statistical_tests/soil_comb_phys.xlsx")
plant_health_param <- read.csv("./02_output/09_plant_health/combined_plant_data_incl_yiel.csv")[,-c(1,3:8)]
regenerative_score <- read.xlsx("./01_input/regenerative_score_2025_08_16.xlsx",sheet = 1)
plant_health <- read.xlsx("./02_output/09_plant_health/plant_health_total.xlsx")
# soil_health <- read.xlsx("./02_output/08_SHI/shi_total_rq.xlsx")
soil_health <- read.xlsx("./02_output/08_SHI/shi_total_rq_no_CNratio.xlsx")
#define output directories
output_dir_reg_score <- "./02_output/13_regenerative_score_tests/"
#create additional row for farm 2_2 with interpolated ra score
c_names <- colnames(regenerative_score)
additional_row_2_2 <- data.frame("2_2",1,NA,NA,NA,NA,NA,NA,NA,NA,NA,NA)
colnames(additional_row_2_2) <- c_names
regenerative_score_yr1 <- regenerative_score %>%
filter(year == 1)
regenerative_score_yr1_conv <- regenerative_score_yr1 %>%
filter(substr(participant,3,3)== 2)
additional_row_2_2[,12] <- round(mean(regenerative_score_yr1_conv$RA_score),0)
#get score of field 2_1 as approximation for field 2_2
additional_row_2_2[,12] <- 1
regenerative_score_yr1_ready <- regenerative_score_yr1 %>%
bind_rows(additional_row_2_2) %>%
select(participant,RA_score)
#get four year average ra scores and add average conventional to 2_2
regenerative_score_mean <- regenerative_score %>%
group_by(participant) %>%
summarise(RA_average = mean(RA_score),.groups = "drop")
regenerative_score_mean_conv <- regenerative_score_mean %>%
filter(substr(participant,3,3)== 2)
c_names <- colnames(regenerative_score_mean)
additional_row_2_2 <- data.frame("2_2",NA)
colnames(additional_row_2_2) <- c_names
additional_row_2_2[,2] <- mean(regenerative_score_mean_conv$RA_average)
#get the score of field 2_1 for field 2_2
additional_row_2_2[,2] <- 2.25
regenerative_score_mean_ready <- regenerative_score_mean %>%
bind_rows(additional_row_2_2)
regenerative_score_yr1_average <- regenerative_score_yr1_ready %>%
left_join(regenerative_score_mean_ready)
rm(regenerative_score_mean,regenerative_score_mean_conv,regenerative_score_yr1,
regenerative_score_yr1_conv)
write.xlsx(regenerative_score_yr1_average,file.path(output_dir_reg_score,"total_ra_scores_per_field.xlsx"))
#02. simple correlations
shapiro.test(soil_chemical_param$pH) #phi_total 0.01736 no normal distr, shi_total = 0.288 normal distr
#combine datasets
combined_data_soil <- soil_biological_param %>%
left_join(soil_chemical_param,by="sample_name") %>%
left_join(soil_physical_param,by="sample_name") %>%
left_join(soil_health[,c(1,12)],by="sample_name")
combined_data_plant <- plant_health_param %>%
left_join(plant_health[,c(1,10,11)],by="sample_name")
combined_plant_soil <- combined_data_soil %>%
left_join(combined_data_plant,by = "sample_name") %>%
mutate(field_id = substr(sample_name,1,3),.after = 1)
long_comb_plant_soil <- to_long(combined_plant_soil)
combined_plant_soil_ra_plot <- combined_plant_soil %>%
left_join(regenerative_score_yr1_average,by = join_by(field_id=="participant"))
combined_plant_soil_mean <- combined_plant_soil %>%
group_by(substr(sample_name,1,3)) %>%
summarise(across(3:31,~mean(.x,na.rm = TRUE))) %>%
rename("field_id" = "substr(sample_name, 1, 3)")
combined_plant_soil_ra <- combined_plant_soil_mean %>%
left_join(regenerative_score_yr1_average, by = join_by("field_id"=="participant"))
#2. calculate spearman#####
# ---- columns to exclude from correlation as predictors ----
id_cols    <- c("field_id")          # add more IDs if you have them
score_cols <- c("RA_score", "RA_average")
num_cols <- combined_plant_soil_ra %>%
select(where(is.numeric)) %>%
names()
predictor_cols <- setdiff(num_cols, c(id_cols, score_cols))
# ---- run for both RA_score and RA_average ----
cor_RA_score   <- cor_against_all("RA_score",dat = combined_plant_soil_ra)
cor_RA_average <- cor_against_all("RA_average",dat = combined_plant_soil_ra)
# Combined tidy table
cor_long <- bind_rows(cor_RA_score, cor_RA_average)
# ---- inspect top results ----
head(cor_RA_score, 10)
head(cor_RA_average, 10)
# ---- (optional) write results to CSV ----
write.csv(cor_RA_score,   "spearman_RA_score.csv",   row.names = FALSE)
write.csv(cor_RA_average, "spearman_RA_average.csv", row.names = FALSE)
write.csv(cor_long,       "spearman_all_results.csv", row.names = FALSE)
#quick comparison plot: top |rho| per target ----
top_k <- 10
cor_long_clean <- clean_plant_names(cor_long,variable)
cor_long_clean <- clean_soil_names(cor_long_clean,variable)
plot_dat <- cor_long_clean %>%
mutate(sig_raw = p_value < 0.05) %>%
group_by(target) %>%
slice_max(order_by = abs(spearman_r), n = top_k, with_ties = FALSE) %>%
ungroup() %>%
mutate(variable = str_trunc(variable, 30)) %>%
arrange(target, spearman_r) %>%
mutate(variable = factor(variable, levels = unique(variable))) %>%
mutate(target = if_else(target == "RA_average",
"4 Year Average RA score",
"OSR RA Score"))
spearman_overview <- ggplot(plot_dat, aes(x = variable, y = spearman_r, fill=sig_raw)) +
geom_col() +
facet_wrap(~ target, scales = "free_y") +
scale_fill_manual(values = viridis(2))+
geom_hline(yintercept = 0) +
coord_flip() +
labs(x = NULL, y = "Spearman's rho", title = "Strongest correlations (Spearmanâ€™s rho)\nbetween RA scores and investigated soil and plant parameters",
fill = "Significance") +
theme_minimal(base_size = 12)+
theme(
legend.position = "bottom"
)
ggsave(plot = spearman_overview,filename = file.path(output_dir_reg_score,"spearman_correlation_reg_score.png"),
width = 18, height = 16, units = "cm")
ggplot(data=combined_plant_soil_ra_plot,aes(x=RA_average,y=`C%_normal`))+
geom_point()
View(combined_plant_soil_ra_plot)
ggplot(data=combined_plant_soil_ra_plot,aes(x=RA_average,y=shi_total))+
geom_point()
ggplot(data=combined_plant_soil_ra_plot,aes(x=RA_score,y=shi_total))+
geom_point()
ggplot(data=combined_plant_soil_ra_plot,aes(x=RA_average,y=shi_total))+
geom_point()
#00_Setup_Environment######
#import libraries
library(tidyverse)
library(openxlsx)
library(ggplot2)
library(hrbrthemes)
#load project functions
source("./03_R/00_functions.R")
#import datasets
soil_combined <- readRDS("./01_input/soil_data_combined.rds")
soil_risk <- readRDS("./02_output/11_ppp_comparison/ppp_all_cleaned_long_meta_rq.rds")
#1. create SHI dataframe ####
#first preparation step
soil_combined_rp <- plot_prepr(soil_combined)
#select all the parameters defined in the MDS minmum data set
shi_dataset_basic <- soil_combined_rp %>%
select(1:4,6,10,18,22,27,33) #Risk Quotient is yet missing, needs to be added ASAP!!!!
shi_dataset_basic_ph <- shi_dataset_basic %>%
mutate(pH = -log10(Hplus_conc_mol_l)) %>%
select(-Hplus_conc_mol_l)
#check for outliers in the dataset
shi_dataset_basic_ph_long <- shi_dataset_basic_ph %>%
pivot_longer(cols = 5:10,names_to = "variable",values_to = "measurement")
variables <- unique(shi_dataset_basic_ph_long$variable)
for(i in variables){
shi_dataset_basic_ph_long_f <- shi_dataset_basic_ph_long %>%
filter(variable == i)
p <- ggplot(shi_dataset_basic_ph_long_f,aes(x=variable,y=measurement))+
geom_boxplot()
print(p)
}
#1.2 Prepare RQ data for SHI
soil_risk_cum_plot <- soil_risk %>%
group_by(sample) %>%
summarise(cumulative_RQ = sum(risk_quotient,na.rm = TRUE),
.groups = "drop") %>%
rename("sample_name" = "sample")
soil_risk_cum_plot_classified <- soil_risk_cum_plot %>%
mutate(rq_classified =
case_when(
cumulative_RQ < 0.01 ~ 1,
cumulative_RQ >= 0.01 & cumulative_RQ < 0.1 ~ 0.7,
cumulative_RQ >= 0.1 & cumulative_RQ < 1 ~ 0.3,
cumulative_RQ > 1 ~0,
TRUE ~ cumulative_RQ)
)
#2. calculate SHI scores####
scored_soil_data <- score_shi(shi_dataset_basic_ph)
scored_soil_data_rq <- scored_soil_data %>%
left_join(soil_risk_cum_plot_classified, by = "sample_name") %>%
select(-cumulative_RQ)
scored_soil_data_rq_total <- scored_soil_data_rq %>%
mutate(shi_total = rowSums(across(5:11),na.rm = TRUE))
#calculate mean per field
shi_mean <- scored_soil_data %>%
group_by(location,farming_system) %>%
summarise(across(
.cols = c("pH", "microbial_c", "Mg_aus_kation_mmol_kg",
"Na_aus_kation_mmol_kg", "C%_normal", "mean_BD_g_cm3"),
.fns = mean,
.names = "{.col}"
), .groups = "drop")
shi_mean_clean <- shi_mean %>%
mutate("Field ID" = paste(location,farming_system,sep = "_"),.before = 1)
shi_mean_total <- shi_mean_clean %>%
mutate(shi_total = rowSums(across(4:9), na.rm = TRUE))
scored_soil_data_rq_total_no_CN <- scored_soil_data_rq_total[,-c(9,13)] %>%
mutate(shi_total = rowSums(across(5:11)))
shi_mean_rq_total <- scored_soil_data_rq_total %>%
group_by(location,farming_system) %>%
summarise(across(
.cols = c("pH", "microbial_c", "Mg_aus_kation_mmol_kg",
"Na_aus_kation_mmol_kg", "C%_normal",
"mean_BD_g_cm3", "rq_classified", "shi_total"),
.fns = mean,
.names = "{.col}"
),
.groups = "drop") %>%
mutate("Field ID" = paste(location,farming_system,sep = "_"),.before = 1)
#prepare for ploting
#rearange data
shi_mean_clean_prep <- shi_mean_clean %>%
pivot_longer(cols=4:9,names_to = "variable",values_to = "SHI score")
shi_mean_clean_prep_rn <- clean_soil_names(shi_mean_clean_prep,variable)
shi_cleeveland <- shi_mean_clean_prep_rn %>%
select(-`Field ID`) %>%
pivot_wider(names_from = farming_system, values_from = `SHI score`)
shi_cleeveland <- shi_cleeveland %>%
rename("Regenerative" = 3, "Conventional" = 4)
shi_mean_rq_total_prep <- shi_mean_rq_total %>%
rename("RQ score" = "rq_classified") %>%
pivot_longer(cols = 4:11, names_to = "variable", values_to = "SHI score")
shi_mean_rq_total_prep <- clean_soil_names(shi_mean_rq_total_prep,variable)
shi_cleeveland_rq <- shi_mean_rq_total_prep %>%
select(-`Field ID`) %>%
pivot_wider(names_from = farming_system, values_from = `SHI score`)
shi_cleeveland_rq <- shi_cleeveland_rq %>%
rename("Regenerative" = 3, "Conventional" = 4)
shi_cleeveland_rq_plot <- shi_cleeveland_rq %>%
filter(variable != "shi_total")
# 1) One label per location
loc_labels <- shi_cleeveland_rq_plot %>%
group_by(location) %>%
summarise(
r_better = sum(Regenerative > Conventional, na.rm = TRUE),
c_better = sum(Conventional > Regenerative, na.rm = TRUE),
n_vars   = sum(!is.na(Regenerative) & !is.na(Conventional)),
.groups = "drop"
) %>%
mutate(label = sprintf("R vs. C: %d-%d", r_better, c_better)) %>%
mutate(label = if_else(label=="Reg vs. Conv: 0-0","no comp.", label))
#3. generat cleeveland dot plot
location_labels <- c(
"1" = "Site 1 (R = 4.80) <sup>1.)</sup>",
"2" = "Site 2 (R = 3.67, C = 2.92) <sup>2.)</sup>",
"3" = "Site 3 (R = 5.66, C = 4.98)",
"4" = "Site 4 (R = 4.87, C = 3.27)",
"5" = "Site 5 (R = 4.33, C = 3.50)",
"6" = "Site 6 (R = 4.20, C = 3.07)"
)
shi_plot <- ggplot(shi_cleeveland) +
geom_segment(aes(x = Regenerative, xend = Conventional,
y = variable, yend = variable), color = "#2C3E50",alpha=0.7) +
geom_point(aes(x = Regenerative, y = variable), color = "#66c2a5", size = 3) +
geom_point(aes(x = Conventional, y = variable), color = "#fc8d62", size = 3) +
facet_wrap(~location, scales = "free_x",nrow = 3,
labeller = as_labeller(location_labels)) +
theme_minimal() +
theme(
plot.title = element_text(size = 15,face = "bold",hjust = 0.5),
axis.title.x = element_text(size=13),
axis.title.y = element_text(size=13),
axis.text.x = element_text(size = 11),
axis.text.y = element_text(size =11),
strip.text = element_text(size = 13),
panel.border = element_rect(color = "grey60", fill = NA, linewidth = 0.5)
)+
labs(
title = "Cleveland Dot Plot of SHI Scores by Variable and Location",
x = "Score (0â€“1)",
y = "Soil Health Parameter"
)
shi_plot
shi_plot_rq <- ggplot(shi_cleeveland_rq_plot) +
geom_segment(aes(x = Regenerative, xend = Conventional,
y = variable, yend = variable), color = "#2C3E50",alpha=0.7) +
geom_point(aes(x = Regenerative, y = variable), color = "#66c2a5", size = 3) +
geom_point(aes(x = Conventional, y = variable), color = "#fc8d62", size = 3) +
facet_wrap(~location, scales = "free_x",nrow = 3,
labeller = as_labeller(location_labels)) +
scale_x_continuous(limits = c(0,1))+
# bottom-left annotation per facet
geom_richtext(data = loc_labels,
aes(x = 0.0, y = -Inf, label = label),
hjust = 0, vjust = -0.6, size = 3.5,
inherit.aes = FALSE,
fill = "transparent") +
theme_minimal() +
theme(
plot.title = element_text(size = 15,face = "bold",hjust = 0.5),
axis.title.x = element_text(size=13),
axis.title.y = element_text(size=13),
axis.text.x = element_text(size = 11),
axis.text.y = element_text(size =11),
strip.text.x = element_markdown(size = 13),
panel.border = element_rect(color = "grey60", fill = NA, linewidth = 0.5)
)+
labs(
title = "Cleveland Dot Plot of SHI Scores by Variable and Location",
x = "Score",
y = "Soil Health Parameter"
)
shi_plot_rq
ggsave("./02_output/08_shi/shi_cleeveland_plot_MA_no_CNratio_site.png",plot = shi_plot_rq,
width = 19, height=27, units = "cm", dpi = 300)
#00_Setup_Environment######
#import libraries
library(tidyverse)
library(openxlsx)
library(ggplot2)
library(ggtext)
library(hrbrthemes)
#load project functions
source("./03_R/00_functions.R")
#load data
plant_data_combined_incl_yield <-  readRDS("./01_input/combined_plant_data_incl_yield.rds")
plant_data_combined <- readRDS("./01_input/combined_plant_data.rds")
#01. create PHI data frame####
#clean combined plant data for index creation
plant_data_combined_incl_yield_clean <- plant_data_combined_incl_yield %>%
select(-c(2:7,13,14))
plant_data_combined_incl_yield_clean_rp <- plot_prepr(plant_data_combined_incl_yield_clean)
plant_data_combined_incl_yield_clean_rp <- plant_data_combined_incl_yield_clean_rp %>%
select(-shape,-color)
#02. calculate
#score plant parameters
scored_plant_data <- score_phi(plant_data_combined_incl_yield_clean_rp)
phi_total <- scored_plant_data %>%
mutate(phi_total = rowSums(across(5:9), na.rm = TRUE)) %>%
mutate(phi_total_no_yield = rowSums(across(5:8), na.rm = TRUE))
#calculate mean per field
phi_mean <- phi_total %>%
group_by(location,farming_system) %>%
summarise(across(
.cols = c("Chlorophyll (SPAD)","Plant height (cm)",
"Root health score","Specific Leaf Area (g/cm2)",
"Yield (dt/ha)","phi_total","phi_total_no_yield"),
.fns = ~mean(.x, na.rm = TRUE),
.names = "{.col}"
), .groups = "drop")
phi_mean_clean <- phi_mean %>%
mutate("Field ID" = paste(location,farming_system,sep = "_"),.before = 1) %>%
rename("SLA (g/cm2)" = "Specific Leaf Area (g/cm2)")
#03. prepare for plotting#####
#rearange data
phi_mean_clean_prep <- phi_mean_clean %>%
pivot_longer(cols=4:8,names_to = "variable",values_to = "PHI score")
phi_cleeveland <- phi_mean_clean_prep %>%
select(-c(`Field ID`,phi_total,phi_total_no_yield)) %>%
pivot_wider(names_from = farming_system, values_from = `PHI score`)
phi_cleeveland <- phi_cleeveland %>%
rename("Regenerative" = 3, "Conventional" = 4)
#4. generat cleeveland dot plot####
location_labels <- c(
"1" = "Site 1 (R = 2.61) <sup>1.)</sup>",
"2" = "Site 2 (R = 3.94, C = 2.59) <sup>2.)</sup>",
"3" = "Site 3 (R = 3.99, C = 3.75)",
"4" = "Site 4 (R = 3.18, C = 3.50)",
"5" = "Site 5 (R = 2.52, C = 3.41)",
"6" = "Site 6 (R = 1.59, C = 3.30) <sup>3.)</sup>"
)
# 1) One label per location
loc_labels <- phi_cleeveland %>%
group_by(location) %>%
summarise(
r_better = sum(Regenerative > Conventional, na.rm = TRUE),
c_better = sum(Conventional > Regenerative, na.rm = TRUE),
n_vars   = sum(!is.na(Regenerative) & !is.na(Conventional)),
.groups = "drop"
) %>%
mutate(label = sprintf("R vs. C: %d-%d", r_better, c_better)) %>%
mutate(label = if_else(label=="Reg vs. Conv: 0-0","no comp.", label))
phi_plot <- ggplot(phi_cleeveland) +
geom_segment(aes(x = Regenerative, xend = Conventional,
y = variable, yend = variable), color = "#2C3E50",alpha=0.7) +
geom_point(aes(x = Regenerative, y = variable), color = "#66c2a5", size = 3) +
geom_point(aes(x = Conventional, y = variable), color = "#fc8d62", size = 3) +
facet_wrap(~location, scales = "free_x",nrow = 3,
labeller = as_labeller(location_labels)) +
scale_x_continuous(limits = c(0,1))+
# bottom-left annotation per facet
geom_richtext(data = loc_labels,
aes(x = 0.01, y = -Inf, label = label),
hjust = 0, vjust = -0.6, size = 3.5,
inherit.aes = FALSE,
fill = "transparent") +
theme_minimal() +
theme(
plot.title = element_text(size = 15,face = "bold",hjust = 0.5),
axis.title.x = element_text(size=13),
axis.title.y = element_text(size=13),
axis.text.x = element_text(size = 11),
axis.text.y = element_text(size =11),
strip.text.x = ggtext::element_markdown(size = 13),
panel.border = element_rect(color = "grey60", fill = NA, linewidth = 0.5)
)+
labs(
title = "Cleveland Dot Plot of SHI Scores by Variable and Location",
x = "Score (0â€“1)",
y = "Soil Health Parameter"
)
phi_plot <- ggplot(phi_cleeveland) +
geom_segment(aes(x = Regenerative, xend = Conventional,
y = variable, yend = variable), color = "#2C3E50",alpha=0.7) +
geom_point(aes(x = Regenerative, y = variable), color = "#66c2a5", size = 3) +
geom_point(aes(x = Conventional, y = variable), color = "#fc8d62", size = 3) +
facet_wrap(~location, scales = "free_x",nrow = 3,
labeller = as_labeller(location_labels)) +
scale_x_continuous(limits = c(0,1))+
# bottom-left annotation per facet
geom_richtext(data = loc_labels,
aes(x = 0.01, y = -Inf, label = label),
hjust = 0, vjust = -0.6, size = 3.5,
inherit.aes = FALSE,
fill = "transparent") +
theme_minimal() +
theme(
plot.title = element_text(size = 15,face = "bold",hjust = 0.5),
axis.title.x = element_text(size=13),
axis.title.y = element_text(size=13),
axis.text.x = element_text(size = 11),
axis.text.y = element_text(size =11),
strip.text.x = ggtext::element_markdown(size = 13),
panel.border = element_rect(color = "grey60", fill = NA, linewidth = 0.5)
)+
labs(
title = "Cleveland Dot Plot of SHI Scores by Variable and Location",
x = "Score (0â€“1)",
y = "Plant Health Parameter"
)
phi_plot
phi_plot <- ggplot(phi_cleeveland) +
geom_segment(aes(x = Regenerative, xend = Conventional,
y = variable, yend = variable), color = "#2C3E50",alpha=0.7) +
geom_point(aes(x = Regenerative, y = variable), color = "#66c2a5", size = 3) +
geom_point(aes(x = Conventional, y = variable), color = "#fc8d62", size = 3) +
facet_wrap(~location, scales = "free_x",nrow = 3,
labeller = as_labeller(location_labels)) +
scale_x_continuous(limits = c(0,1))+
# bottom-left annotation per facet
geom_richtext(data = loc_labels,
aes(x = 0.01, y = -Inf, label = label),
hjust = 0, vjust = -0.6, size = 3.5,
inherit.aes = FALSE,
fill = "transparent") +
theme_minimal() +
theme(
plot.title = element_text(size = 15,face = "bold",hjust = 0.5),
axis.title.x = element_text(size=13),
axis.title.y = element_text(size=13),
axis.text.x = element_text(size = 11),
axis.text.y = element_text(size =11),
strip.text.x = ggtext::element_markdown(size = 13),
panel.border = element_rect(color = "grey60", fill = NA, linewidth = 0.5)
)+
labs(
title = "Cleveland Dot Plot of PHI Scores by Variable and Location",
x = "Score (0â€“1)",
y = "Plant Health Parameter"
)
phi_plot
ggsave("./02_output/09_plant_health/phi_cleeveland_plot_MA_upd.png",plot = phi_plot,
width = 19, height=27, units = "cm", dpi = 300)
